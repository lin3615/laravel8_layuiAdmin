laravel8.5与layuiadmin整合
一.laravel的基本安装与配置

1.本地搭配好PHP运行环境，各个版本参考laravel8.5的要求,
这里选择composer方式安装

composer create-project laravel/laravel laravel8

2.下载好laravel之后，配置好对应的网站域名，这里以本地 laravel8.com为域名


3.为了方法测试和开发，直接修改默认模板 resources/views/welcome.blade.php
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Laravel</title>


    <style>
        body {
            font-family: 'Nunito', sans-serif;
        }
    </style>
</head>
<body class="antialiased">
<div class="relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center py-4 sm:pt-0">

    Hi,world!!

</div>
</body>
</html>

4.新建立数据库，并配置数据库连接信息 .env

5.配置用户认证，这里用手册中的 Laravel Breeze
5.1迁移数据
cd laravel8
php artisan migrate

5.2 安装 Laravel Breeze以及整合前端登陆，注册页面功能(此登陆和注册，以后会关闭)
composer require laravel/breeze --dev

php artisan breeze:install

npm install

npm run dev

php artisan migrate

5.3 在浏览器中访问/register 注册两个新用户，以便后面使用，
以 admin 和 root 用户名为例，密码统一用 12345678
注册成功时，直接跳到面板，此时可以先退出 log out

此时查看数据表 users 出现了上面两个用户，可以通过
浏览器访问 /login 来验证上面的用户是否正常 

二.layuiadmin与laravel的基本整合
如果以下文件说明中，没有对应的目录，则手动先建立目录

6.下载layuiadmin,这里使用 layuiAdmin/admin/std/dist下的文件

7.建立目录 /public/static/admin/layuiadmin,把
layuiAdmin/admin/std/dist/layuiadmin的所有文件，复制到上面建立的目录下,
同时下载jquery.js文件，这里统一命名为 jquery.min.js,
即存在目录 /public/js/jquery.min.js

8.屏蔽系统自带的注册，登陆功能,直接注释 /routes/web.php
//Route::get('/dashboard', function () {
//    return view('dashboard');
//})->middleware(['auth'])->name('dashboard');
//
//require __DIR__.'/auth.php';

9.新建控制器 App/Http/Controllers/Admin/IndexController,用来布局首页
<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;

class IndexController extends Controller {
    public function layout() {
         return view('admin.layout');
    }
}
10.设置路由 /routes/web.php,添加如下路由
// 后台布局
Route::group(['prefix' => 'admin'], function() {
    // 后台首页
    Route::get('/',[App\Http\Controllers\Admin\IndexController::class, 'layout'])->name('admin.layout');
});

11. 建立上面的模板文件 /resources/views/admin/layout.blade.php
此文件参考layuiadmin的文件 /layuiAdmin/admin/std/dist/views/index.html

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>layuiAdmin std - 通用后台管理模板系统（iframe标准版）</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link rel="stylesheet" href="/static/admin/layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="/static/admin/layuiadmin/style/admin.css" media="all">


</head>
<body class="layui-layout-body">

<div id="LAY_app">
    <div class="layui-layout layui-layout-admin">
        <div class="layui-header">
            <!-- 头部区域 -->
            <ul class="layui-nav layui-layout-left">
                <li class="layui-nav-item layadmin-flexible" lay-unselect>
                    <a href="javascript:;" layadmin-event="flexible" title="侧边伸缩">
                        <i class="layui-icon layui-icon-shrink-right" id="LAY_app_flexible"></i>
                    </a>
                </li>
                <li class="layui-nav-item layui-hide-xs" lay-unselect>
                    <a href="http://www.layui.com/admin/" target="_blank" title="前台">
                        <i class="layui-icon layui-icon-website"></i>
                    </a>
                </li>
                <li class="layui-nav-item" lay-unselect>
                    <a href="javascript:;" layadmin-event="refresh" title="刷新">
                        <i class="layui-icon layui-icon-refresh-3"></i>
                    </a>
                </li>
                <li class="layui-nav-item layui-hide-xs" lay-unselect>
                    <input type="text" placeholder="搜索..." autocomplete="off" class="layui-input layui-input-search" layadmin-event="serach" lay-action="template/search.html?keywords=">
                </li>
            </ul>
            <ul class="layui-nav layui-layout-right" lay-filter="layadmin-layout-right">

                <li class="layui-nav-item" lay-unselect>
                    <a lay-href="app/message/index.html" layadmin-event="message" lay-text="消息中心">
                        <i class="layui-icon layui-icon-notice"></i>

                        <!-- 如果有新消息，则显示小圆点 -->
                        <span class="layui-badge-dot"></span>
                    </a>
                </li>
                <li class="layui-nav-item layui-hide-xs" lay-unselect>
                    <a href="javascript:;" layadmin-event="theme">
                        <i class="layui-icon layui-icon-theme"></i>
                    </a>
                </li>
                <li class="layui-nav-item layui-hide-xs" lay-unselect>
                    <a href="javascript:;" layadmin-event="note">
                        <i class="layui-icon layui-icon-note"></i>
                    </a>
                </li>
                <li class="layui-nav-item layui-hide-xs" lay-unselect>
                    <a href="javascript:;" layadmin-event="fullscreen">
                        <i class="layui-icon layui-icon-screen-full"></i>
                    </a>
                </li>
                <li class="layui-nav-item" lay-unselect>
                    <a href="javascript:;">
                        <cite>贤心</cite>
                    </a>
                    <dl class="layui-nav-child">
                        <dd><a lay-href="set/user/info.html">基本资料</a></dd>
                        <dd><a lay-href="set/user/password.html">修改密码</a></dd>
                        <hr>
                        <dd  style="text-align: center;"><a href="">退出</a></dd>
                    </dl>
                </li>

                <li class="layui-nav-item layui-hide-xs" lay-unselect>
                    <a href="javascript:;" layadmin-event="about"><i class="layui-icon layui-icon-more-vertical"></i></a>
                </li>
                <li class="layui-nav-item layui-show-xs-inline-block layui-hide-sm" lay-unselect>
                    <a href="javascript:;" layadmin-event="more"><i class="layui-icon layui-icon-more-vertical"></i></a>
                </li>
            </ul>
        </div>

        <!-- 侧边菜单 -->
        <div class="layui-side layui-side-menu">
            <div class="layui-side-scroll">
                <div class="layui-logo" lay-href="home/console.html">
                    <span>layuiAdmin</span>
                </div>

                <ul class="layui-nav layui-nav-tree" lay-shrink="all" id="LAY-system-side-menu" lay-filter="layadmin-system-side-menu">
                    <li data-name="home" class="layui-nav-item layui-nav-itemed">
                        <a href="javascript:;" lay-tips="主页" lay-direction="2">
                            <i class="layui-icon layui-icon-home"></i>
                            <cite>主页</cite>
                        </a>
                        <dl class="layui-nav-child">
                            <dd data-name="console" class="layui-this">
                                <a lay-href="{{route('admin.index')}}">控制台</a>
                            </dd>
                            <dd data-name="console">
                                <a lay-href="{{route('admin.index1')}}">主页一</a>
                            </dd>
                            <dd data-name="console">
                                <a lay-href="{{route('admin.index2')}}">主页二</a>
                            </dd>
                        </dl>
                    </li>
                    <li data-name="component" class="layui-nav-item">
                        <a href="javascript:;" lay-tips="组件" lay-direction="2">
                            <i class="layui-icon layui-icon-component"></i>
                            <cite>组件</cite>
                        </a>
                        <dl class="layui-nav-child">
                            <dd data-name="grid">
                                <a href="javascript:;">栅格</a>
                                <dl class="layui-nav-child">
                                    <dd data-name="list"><a lay-href="component/grid/list.html">等比例列表排列</a></dd>
                                    <dd data-name="mobile"><a lay-href="component/grid/mobile.html">按移动端排列</a></dd>
                                    <dd data-name="mobile-pc"><a lay-href="component/grid/mobile-pc.html">移动桌面端组合</a></dd>
                                    <dd data-name="all"><a lay-href="component/grid/all.html">全端复杂组合</a></dd>
                                    <dd data-name="stack"><a lay-href="component/grid/stack.html">低于桌面堆叠排列</a></dd>
                                    <dd data-name="speed-dial"><a lay-href="component/grid/speed-dial.html">九宫格</a></dd>
                                </dl>
                            </dd>
                            <dd data-name="button">
                                <a lay-href="component/button/index.html">按钮</a>
                            </dd>
                            <dd data-name="form">
                                <a href="javascript:;">表单</a>
                                <dl class="layui-nav-child">
                                    <dd><a lay-href="component/form/element.html">表单元素</a></dd>
                                    <dd><a lay-href="component/form/group.html">表单组合</a></dd>
                                </dl>
                            </dd>
                            <dd data-name="nav">
                                <a lay-href="component/nav/index.html">导航</a>
                            </dd>
                            <dd data-name="tabs">
                                <a lay-href="component/tabs/index.html">选项卡</a>
                            </dd>
                            <dd data-name="progress">
                                <a lay-href="component/progress/index.html">进度条</a>
                            </dd>
                            <dd data-name="panel">
                                <a lay-href="component/panel/index.html">面板</a>
                            </dd>
                            <dd data-name="badge">
                                <a lay-href="component/badge/index.html">徽章</a>
                            </dd>
                            <dd data-name="timeline">
                                <a lay-href="component/timeline/index.html">时间线</a>
                            </dd>
                            <dd data-name="anim">
                                <a lay-href="component/anim/index.html">动画</a>
                            </dd>
                            <dd data-name="auxiliar">
                                <a lay-href="component/auxiliar/index.html">辅助</a>
                            </dd>
                            <dd data-name="layer">
                                <a href="javascript:;">通用弹层<span class="layui-nav-more"></span></a>
                                <dl class="layui-nav-child">
                                    <dd data-name="list">
                                        <a lay-href="component/layer/list.html" lay-text="layer 功能演示">功能演示</a>
                                    </dd>
                                    <dd data-name="special-demo">
                                        <a lay-href="component/layer/special-demo.html" lay-text="layer 特殊示例">特殊示例</a>
                                    </dd>
                                    <dd data-name="theme">
                                        <a lay-href="component/layer/theme.html" lay-text="layer 风格定制">风格定制</a>
                                    </dd>
                                </dl>
                            </dd>
                            <dd data-name="laydate">
                                <a href="javascript:;">日期时间</a>
                                <dl class="layui-nav-child">
                                    <dd data-name="demo1">
                                        <a lay-href="component/laydate/demo1.html" lay-text="layDate 功能演示一">功能演示一</a>
                                    </dd>
                                    <dd data-name="demo2">
                                        <a lay-href="component/laydate/demo2.html" lay-text="layDate 功能演示二">功能演示二</a>
                                    </dd>
                                    <dd data-name="theme">
                                        <a lay-href="component/laydate/theme.html" lay-text="layDate 设定主题">设定主题</a>
                                    </dd>
                                    <dd data-name="special-demo">
                                        <a lay-href="component/laydate/special-demo.html" lay-text="layDate 特殊示例">特殊示例</a>
                                    </dd>
                                </dl>
                            </dd>
                            <dd data-name="table-static">
                                <a lay-href="component/table/static.html">静态表格</a>
                            </dd>
                            <dd data-name="table">
                                <a href="javascript:;">数据表格</a>
                                <dl class="layui-nav-child">
                                    <dd data-name="simple">
                                        <a lay-href="component/table/simple.html" lay-text="">简单数据表格</a>
                                    </dd>
                                    <dd data-name="auto">
                                        <a lay-href="component/table/auto.html" lay-text="">列宽自动分配</a>
                                    </dd>
                                    <dd data-name="data">
                                        <a lay-href="component/table/data.html" lay-text="">赋值已知数据</a>
                                    </dd>
                                    <dd data-name="tostatic">
                                        <a lay-href="component/table/tostatic.html" lay-text="">转化静态表格</a>
                                    </dd>
                                    <dd data-name="page">
                                        <a lay-href="component/table/page.html" lay-text="">开启分页</a>
                                    </dd>
                                    <dd data-name="resetPage">
                                        <a lay-href="component/table/resetPage.html" lay-text="">自定义分页</a>
                                    </dd>
                                    <dd data-name="toolbar">
                                        <a lay-href="component/table/toolbar.html" lay-text="">开启头部工具栏</a>
                                    </dd>
                                    <dd data-name="totalRow">
                                        <a lay-href="component/table/totalRow.html" lay-text="">开启合计行</a>
                                    </dd>
                                    <dd data-name="height">
                                        <a lay-href="component/table/height.html" lay-text="">高度最大适应</a>
                                    </dd>
                                    <dd data-name="checkbox">
                                        <a lay-href="component/table/checkbox.html" lay-text="">开启复选框</a>
                                    </dd>
                                    <dd data-name="radio">
                                        <a lay-href="component/table/radio.html" lay-text="">开启单选框</a>
                                    </dd>
                                    <dd data-name="cellEdit">
                                        <a lay-href="component/table/cellEdit.html" lay-text="">开启单元格编辑</a>
                                    </dd>
                                    <dd data-name="form">
                                        <a lay-href="component/table/form.html" lay-text="">加入表单元素</a>
                                    </dd>
                                    <dd data-name="style">
                                        <a lay-href="component/table/style.html" lay-text="">设置单元格样式</a>
                                    </dd>
                                    <dd data-name="fixed">
                                        <a lay-href="component/table/fixed.html" lay-text="">固定列</a>
                                    </dd>
                                    <dd data-name="operate">
                                        <a lay-href="component/table/operate.html" lay-text="">数据操作</a>
                                    </dd>
                                    <dd data-name="parseData">
                                        <a lay-href="component/table/parseData.html" lay-text="">解析任意数据格式</a>
                                    </dd>
                                    <dd data-name="onrow">
                                        <a lay-href="component/table/onrow.html" lay-text="">监听行事件</a>
                                    </dd>
                                    <dd data-name="reload">
                                        <a lay-href="component/table/reload.html" lay-text="">数据表格的重载</a>
                                    </dd>
                                    <dd data-name="initSort">
                                        <a lay-href="component/table/initSort.html" lay-text="">设置初始排序</a>
                                    </dd>
                                    <dd data-name="cellEvent">
                                        <a lay-href="component/table/cellEvent.html" lay-text="">监听单元格事件</a>
                                    </dd>
                                    <dd data-name="thead">
                                        <a lay-href="component/table/thead.html" lay-text="">复杂表头</a>
                                    </dd>
                                </dl>
                            </dd>
                            <dd data-name="laypage">
                                <a href="javascript:;">分页</a>
                                <dl class="layui-nav-child">
                                    <dd data-name="demo1">
                                        <a lay-href="component/laypage/demo1.html" lay-text="layPage 功能演示一">功能演示一</a>
                                    </dd>
                                    <dd data-name="demo2">
                                        <a lay-href="component/laypage/demo2.html" lay-text="layPage 功能演示二">功能演示二</a>
                                    </dd>
                                </dl>
                            </dd>
                            <dd data-name="upload">
                                <a href="javascript:;">上传</a>
                                <dl class="layui-nav-child">
                                    <dd data-name="demo1">
                                        <a lay-href="component/upload/demo1.html" lay-text="上传功能演示一">功能演示一</a>
                                    </dd>
                                    <dd data-name="demo2">
                                        <a lay-href="component/upload/demo2.html" lay-text="上传功能演示二">功能演示二</a>
                                    </dd>
                                </dl>
                            </dd>
                            <dd data-name="transfer">
                                <a lay-href="component/transfer/index.html">穿梭框</a>
                            </dd>
                            <dd data-name="tree">
                                <a lay-href="component/tree/index.html">树形组件</a>
                            </dd>
                            <dd data-name="colorpicker">
                                <a lay-href="component/colorpicker/index.html">颜色选择器</a>
                            </dd>
                            <dd data-name="slider">
                                <a lay-href="component/slider/index.html">滑块组件</a>
                            </dd>
                            <dd data-name="rate">
                                <a lay-href="component/rate/index.html">评分</a>
                            </dd>
                            <dd data-name="carousel">
                                <a lay-href="component/carousel/index.html">轮播</a>
                            </dd>
                            <dd data-name="flow">
                                <a lay-href="component/flow/index.html">流加载</a>
                            </dd>
                            <dd data-name="util">
                                <a lay-href="component/util/index.html">工具</a>
                            </dd>
                            <dd data-name="code">
                                <a lay-href="component/code/index.html">代码修饰</a>
                            </dd>
                        </dl>
                    </li>
                    <li data-name="template" class="layui-nav-item">
                        <a href="javascript:;" lay-tips="页面" lay-direction="2">
                            <i class="layui-icon layui-icon-template"></i>
                            <cite>页面</cite>
                        </a>
                        <dl class="layui-nav-child">
                            <dd><a lay-href="template/personalpage.html">个人主页</a></dd>
                            <dd><a lay-href="template/addresslist.html">通讯录</a></dd>
                            <dd><a lay-href="template/caller.html">客户列表</a></dd>
                            <dd><a lay-href="template/goodslist.html">商品列表</a></dd>
                            <dd><a lay-href="template/msgboard.html">留言板</a></dd>
                            <dd><a lay-href="template/search.html">搜索结果</a></dd>
                            <dd><a href="user/reg.html" target="_blank">注册</a></dd>
                            <dd><a href="user/login.html" target="_blank">登入</a></dd>
                            <dd><a href="user/forget.html" target="_blank">忘记密码</a></dd>
                            <dd><a lay-href="template/tips/404.html">404页面不存在</a></dd>
                            <dd><a lay-href="template/tips/error.html">错误提示</a></dd>
                            <dd><a lay-href="//www.baidu.com/">百度一下</a></dd>
                            <dd><a lay-href="//www.layui.com/">layui官网</a></dd>
                            <dd><a lay-href="//www.layui.com/admin/">layuiAdmin官网</a></dd>
                        </dl>
                    </li>
                    <li data-name="app" class="layui-nav-item">
                        <a href="javascript:;" lay-tips="应用" lay-direction="2">
                            <i class="layui-icon layui-icon-app"></i>
                            <cite>应用</cite>
                        </a>
                        <dl class="layui-nav-child">

                            <dd data-name="content">
                                <a href="javascript:;">内容系统</a>
                                <dl class="layui-nav-child">
                                    <dd data-name="list"><a lay-href="app/content/list.html">文章列表</a></dd>
                                    <dd data-name="tags"><a lay-href="app/content/tags.html">分类管理</a></dd>
                                    <dd data-name="comment"><a lay-href="app/content/comment.html">评论管理</a></dd>
                                </dl>
                            </dd>
                            <dd data-name="forum">
                                <a href="javascript:;">社区系统</a>
                                <dl class="layui-nav-child">
                                    <dd data-name="list"><a lay-href="app/forum/list.html">帖子列表</a></dd>
                                    <dd data-name="replys"><a lay-href="app/forum/replys.html">回帖列表</a></dd>
                                </dl>
                            </dd>
                            <dd>
                                <a lay-href="app/message/index.html">消息中心</a>
                            </dd>
                            <dd data-name="workorder">
                                <a lay-href="app/workorder/list.html">工单系统</a>
                            </dd>
                        </dl>
                    </li>
                    <li data-name="senior" class="layui-nav-item">
                        <a href="javascript:;" lay-tips="高级" lay-direction="2">
                            <i class="layui-icon layui-icon-senior"></i>
                            <cite>高级</cite>
                        </a>
                        <dl class="layui-nav-child">
                            <dd>
                                <a layadmin-event="im">LayIM 通讯系统</a>
                            </dd>
                            <dd data-name="echarts">
                                <a href="javascript:;">Echarts集成</a>
                                <dl class="layui-nav-child">
                                    <dd><a lay-href="senior/echarts/line.html">折线图</a></dd>
                                    <dd><a lay-href="senior/echarts/bar.html">柱状图</a></dd>
                                    <dd><a lay-href="senior/echarts/map.html">地图</a></dd>
                                </dl>
                            </dd>
                        </dl>
                    </li>



                    <li data-name="user" class="layui-nav-item">
                        <a href="javascript:;" lay-tips="用户" lay-direction="2">
                            <i class="layui-icon layui-icon-user"></i>
                            <cite>用户</cite>
                        </a>
                        <dl class="layui-nav-child">

                            <dd>
                                <a lay-href="user/user/list.html">网站用户</a>
                            </dd>
                            <dd>
                                <a lay-href="user/administrators/list.html">后台管理员</a>
                            </dd>
                            <dd>
                                <a lay-href="user/administrators/role.html">角色管理</a>
                            </dd>

                        </dl>
                    </li>


                    <li data-name="set" class="layui-nav-item">
                        <a href="javascript:;" lay-tips="设置" lay-direction="2">
                            <i class="layui-icon layui-icon-set"></i>
                            <cite>设置</cite>
                        </a>
                        <dl class="layui-nav-child">
                            <dd class="layui-nav-itemed">
                                <a href="javascript:;">系统设置</a>
                                <dl class="layui-nav-child">
                                    <dd><a lay-href="set/system/website.html">网站设置</a></dd>
                                    <dd><a lay-href="set/system/email.html">邮件服务</a></dd>
                                </dl>
                            </dd>
                            <dd class="layui-nav-itemed">
                                <a href="javascript:;">我的设置</a>
                                <dl class="layui-nav-child">
                                    <dd><a lay-href="set/user/info.html">基本资料</a></dd>
                                    <dd><a lay-href="set/user/password.html">修改密码</a></dd>
                                </dl>
                            </dd>
                        </dl>
                    </li>
                    <li data-name="get" class="layui-nav-item">
                        <a href="javascript:;" lay-href="//www.layui.com/admin/#get" lay-tips="授权" lay-direction="2">
                            <i class="layui-icon layui-icon-auz"></i>
                            <cite>授权</cite>
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- 页面标签 -->
        <div class="layadmin-pagetabs" id="LAY_app_tabs">
            <div class="layui-icon layadmin-tabs-control layui-icon-prev" layadmin-event="leftPage"></div>
            <div class="layui-icon layadmin-tabs-control layui-icon-next" layadmin-event="rightPage"></div>
            <div class="layui-icon layadmin-tabs-control layui-icon-down">
                <ul class="layui-nav layadmin-tabs-select" lay-filter="layadmin-pagetabs-nav">
                    <li class="layui-nav-item" lay-unselect>
                        <a href="javascript:;"></a>
                        <dl class="layui-nav-child layui-anim-fadein">
                            <dd layadmin-event="closeThisTabs"><a href="javascript:;">关闭当前标签页</a></dd>
                            <dd layadmin-event="closeOtherTabs"><a href="javascript:;">关闭其它标签页</a></dd>
                            <dd layadmin-event="closeAllTabs"><a href="javascript:;">关闭全部标签页</a></dd>
                        </dl>
                    </li>
                </ul>
            </div>
            <div class="layui-tab" lay-unauto lay-allowClose="true" lay-filter="layadmin-layout-tabs">
                <ul class="layui-tab-title" id="LAY_app_tabsheader">
                    <li lay-id="" lay-attr="" class="layui-this"><i class="layui-icon layui-icon-home"></i></li>
                </ul>
            </div>
        </div>


        <!-- 主体内容 -->
        <div class="layui-body" id="LAY_app_body">
            <div class="layadmin-tabsbody-item layui-show">
                <iframe src="{{route('admin.index')}}" frameborder="0" class="layadmin-iframe"></iframe>
            </div>
        </div>

        <!-- 辅助元素，一般用于移动设备下遮罩 -->
        <div class="layadmin-body-shade" layadmin-event="shade"></div>
    </div>
</div>

<script src="/static/admin/layuiadmin/layui/layui.js"></script>
<script>
    layui.config({
        base: '/static/admin/layuiadmin/' //静态资源所在路径
    }).extend({
        index: 'lib/index' //主入口模块
    }).use('index');
</script>


</body>
</html>

12. 设置上面的对应路由及方法
/routes/web.php 添加
// 后台布局
Route::group(['prefix' => 'admin'], function() {

	....

    // layuiadmin原模板模块 - 控制台
    Route::get('/index',[App\Http\Controllers\Admin\IndexController::class, 'index'])->name('admin.index');

    // layuiadmin原模板模块 - 主页一
    Route::get('/index1',[App\Http\Controllers\Admin\IndexController::class, 'index1'])->name('admin.index1');

    // layuiadmin原模板模块 - 主页二
    Route::get('/index2',[App\Http\Controllers\Admin\IndexController::class, 'index2'])->name('admin.index2');

});

/app/Http/Controllers/Admin/IndexController.php 添加
   
   .....
    public function index() {
        return view('admin.index.index');
    }

    public function index1() {
        return view('admin.index.index1');
    }

    public function index2() {
        return view('admin.index.index2');
    }

13. 建立上面对应的三个模板在目录resources/views/admin分别建立
index.blade.php , index1.blade.php  ,index2.blade.php
对应layuiadmin中的文件分别是目录 /layuiAdmin/admin/std/dist/views/home
里的三个文件 console.html,homepage1.html,homepage2.html
这里使用 index.blade.php
@extends('admin.base')

@section('content')
<div class="layui-row layui-col-space15">

    <div class="layui-col-md8">

        <div class="layui-row layui-col-space15">

            <div class="layui-col-md6">

                <div class="layui-card">

                    <div class="layui-card-header">快捷方式</div>

                    <div class="layui-card-body">



                        <div class="layui-carousel layadmin-carousel layadmin-shortcut">

                            <div carousel-item>

                                <ul class="layui-row layui-col-space10">

                                    <li class="layui-col-xs3">

                                        <a lay-href="home/homepage1.html">

                                            <i class="layui-icon layui-icon-console"></i>

                                            <cite>主页一</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="home/homepage2.html">

                                            <i class="layui-icon layui-icon-chart"></i>

                                            <cite>主页二</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="component/layer/list.html">

                                            <i class="layui-icon layui-icon-template-1"></i>

                                            <cite>弹层</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a layadmin-event="im">

                                            <i class="layui-icon layui-icon-chat"></i>

                                            <cite>聊天</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="component/progress/index.html">

                                            <i class="layui-icon layui-icon-find-fill"></i>

                                            <cite>进度条</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="app/workorder/list.html">

                                            <i class="layui-icon layui-icon-survey"></i>

                                            <cite>工单</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="user/user/list.html">

                                            <i class="layui-icon layui-icon-user"></i>

                                            <cite>用户</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="set/system/website.html">

                                            <i class="layui-icon layui-icon-set"></i>

                                            <cite>设置</cite>

                                        </a>

                                    </li>

                                </ul>

                                <ul class="layui-row layui-col-space10">

                                    <li class="layui-col-xs3">

                                        <a lay-href="set/user/info.html">

                                            <i class="layui-icon layui-icon-set"></i>

                                            <cite>我的资料</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="set/user/info.html">

                                            <i class="layui-icon layui-icon-set"></i>

                                            <cite>我的资料</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="set/user/info.html">

                                            <i class="layui-icon layui-icon-set"></i>

                                            <cite>我的资料</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="set/user/info.html">

                                            <i class="layui-icon layui-icon-set"></i>

                                            <cite>我的资料</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="set/user/info.html">

                                            <i class="layui-icon layui-icon-set"></i>

                                            <cite>我的资料</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="set/user/info.html">

                                            <i class="layui-icon layui-icon-set"></i>

                                            <cite>我的资料</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="set/user/info.html">

                                            <i class="layui-icon layui-icon-set"></i>

                                            <cite>我的资料</cite>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs3">

                                        <a lay-href="set/user/info.html">

                                            <i class="layui-icon layui-icon-set"></i>

                                            <cite>我的资料</cite>

                                        </a>

                                    </li>

                                </ul>



                            </div>

                        </div>



                    </div>

                </div>

            </div>

            <div class="layui-col-md6">

                <div class="layui-card">

                    <div class="layui-card-header">待办事项</div>

                    <div class="layui-card-body">



                        <div class="layui-carousel layadmin-carousel layadmin-backlog">

                            <div carousel-item>

                                <ul class="layui-row layui-col-space10">

                                    <li class="layui-col-xs6">

                                        <a lay-href="app/content/comment.html" class="layadmin-backlog-body">

                                            <h3>待审评论</h3>

                                            <p><cite>66</cite></p>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs6">

                                        <a lay-href="app/forum/list.html" class="layadmin-backlog-body">

                                            <h3>待审帖子</h3>

                                            <p><cite>12</cite></p>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs6">

                                        <a lay-href="template/goodslist.html" class="layadmin-backlog-body">

                                            <h3>待审商品</h3>

                                            <p><cite>99</cite></p>

                                        </a>

                                    </li>

                                    <li class="layui-col-xs6">

                                        <a href="javascript:;" onclick="layer.tips('不跳转', this, {tips: 3});" class="layadmin-backlog-body">

                                            <h3>待发货</h3>

                                            <p><cite>20</cite></p>

                                        </a>

                                    </li>

                                </ul>

                                <ul class="layui-row layui-col-space10">

                                    <li class="layui-col-xs6">

                                        <a href="javascript:;" class="layadmin-backlog-body">

                                            <h3>待审友情链接</h3>

                                            <p><cite style="color: #FF5722;">5</cite></p>

                                        </a>

                                    </li>

                                </ul>

                            </div>

                        </div>

                    </div>

                </div>

            </div>

            <div class="layui-col-md12">

                <div class="layui-card">

                    <div class="layui-card-header">数据概览</div>

                    <div class="layui-card-body">



                        <div class="layui-carousel layadmin-carousel layadmin-dataview" data-anim="fade" lay-filter="LAY-index-dataview">

                            <div carousel-item id="LAY-index-dataview">

                                <div><i class="layui-icon layui-icon-loading1 layadmin-loading"></i></div>

                                <div></div>

                                <div></div>

                            </div>

                        </div>



                    </div>

                </div>

                <div class="layui-card">

                    <div class="layui-tab layui-tab-brief layadmin-latestData">

                        <ul class="layui-tab-title">

                            <li class="layui-this">今日热搜</li>

                            <li>今日热帖</li>

                        </ul>

                        <div class="layui-tab-content">

                            <div class="layui-tab-item layui-show">

                                <table id="LAY-index-topSearch"></table>

                            </div>

                            <div class="layui-tab-item">

                                <table id="LAY-index-topCard"></table>

                            </div>

                        </div>

                    </div>

                </div>

            </div>

        </div>

    </div>



    <div class="layui-col-md4">

        <div class="layui-card">

            <div class="layui-card-header">版本信息</div>

            <div class="layui-card-body layui-text">

                <table class="layui-table">

                    <colgroup>

                        <col width="100">

                        <col>

                    </colgroup>

                    <tbody>

                    <tr>

                        <td>当前版本</td>

                        <td>

                            <script type="text/html" template>

                                v1.0.0

                                <a href="http://fly.layui.com/docs/3/" target="_blank" style="padding-left: 15px;">更新日志</a>

                            </script>

                        </td>

                    </tr>

                    <tr>

                        <td>基于框架</td>

                        <td>

                            <script type="text/html" template>

                                layui-v2.3.0

                            </script>

                        </td>

                    </tr>

                    <tr>

                        <td>主要特色</td>

                        <td>零门槛 / 响应式 / 清爽 / 极简</td>

                    </tr>

                    <tr>

                        <td>获取渠道</td>

                        <td style="padding-bottom: 0;">

                            <div class="layui-btn-container">

                                <a href="http://www.layui.com/admin/" target="_blank" class="layui-btn layui-btn-danger">获取授权</a>

                                <a href="http://fly.layui.com/download/layuiAdmin/" target="_blank" class="layui-btn">立即下载</a>

                            </div>

                        </td>

                    </tr>

                    </tbody>

                </table>

            </div>

        </div>



        <div class="layui-card">

            <div class="layui-card-header">效果报告</div>

            <div class="layui-card-body layadmin-takerates">

                <div class="layui-progress" lay-showPercent="yes">

                    <h3>转化率（日同比 28% <span class="layui-edge layui-edge-top" lay-tips="增长" lay-offset="-15"></span>）</h3>

                    <div class="layui-progress-bar" lay-percent="65%"></div>

                </div>

                <div class="layui-progress" lay-showPercent="yes">

                    <h3>签到率（日同比 11% <span class="layui-edge layui-edge-bottom" lay-tips="下降" lay-offset="-15"></span>）</h3>

                    <div class="layui-progress-bar" lay-percent="32%"></div>

                </div>

            </div>

        </div>



        <div class="layui-card">

            <div class="layui-card-header">实时监控</div>

            <div class="layui-card-body layadmin-takerates">

                <div class="layui-progress" lay-showPercent="yes">

                    <h3>CPU使用率</h3>

                    <div class="layui-progress-bar" lay-percent="58%"></div>

                </div>

                <div class="layui-progress" lay-showPercent="yes">

                    <h3>内存占用率</h3>

                    <div class="layui-progress-bar layui-bg-red" lay-percent="90%"></div>

                </div>

            </div>

        </div>



        <div class="layui-card">

            <div class="layui-card-header">产品动态</div>

            <div class="layui-card-body">

                <div class="layui-carousel layadmin-carousel layadmin-news" data-autoplay="true" data-anim="fade" lay-filter="news">

                    <div carousel-item>

                        <div><a href="http://fly.layui.com/docs/2/" target="_blank" class="layui-bg-red">layuiAdmin 快速上手文档</a></div>

                        <div><a href="http://fly.layui.com/vipclub/list/layuiadmin/" target="_blank" class="layui-bg-green">layuiAdmin 会员讨论专区</a></div>

                        <div><a href="http://www.layui.com/admin/#get" target="_blank" class="layui-bg-blue">获得 layui 官方后台模板系统</a></div>

                    </div>

                </div>

            </div>

        </div>



        <div class="layui-card">

            <div class="layui-card-header">

                作者心语

                <i class="layui-icon layui-icon-tips" lay-tips="要支持的噢" lay-offset="5"></i>

            </div>

            <div class="layui-card-body layui-text layadmin-text">

                <p>一直以来，layui 秉承无偿开源的初心，虔诚致力于服务各层次前后端 Web 开发者，在商业横飞的当今时代，这一信念从未动摇。即便身单力薄，仍然重拾决心，埋头造轮，以尽可能地填补产品本身的缺口。</p>

                <p>在过去的一段的时间，我一直在寻求持久之道，已维持你眼前所见的一切。而 layuiAdmin 是我们尝试解决的手段之一。我相信真正有爱于 layui 生态的你，定然不会错过这一拥抱吧。</p>

                <p>子曰：君子不用防，小人防不住。请务必通过官网正规渠道，获得 <a href="http://www.layui.com/admin/" target="_blank">layuiAdmin</a>！</p>

                <p>—— 贤心（<a href="http://www.layui.com/" target="_blank">layui.com</a>）</p>

            </div>

        </div>

    </div>

</div>
@endsection

@section('script')
<script>
    layui.use(['index', 'console']);
</script>
@endsection

14. 建立以上需要的模板文件 resources/views/admin/base.blade.php
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title></title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <link rel="stylesheet" href="/static/admin/layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="/static/admin/layuiadmin/style/admin.css" media="all">
</head>
<body>
<div class="layui-fluid">
    @yield('content')
</div>

<script src="/js/jquery.min.js"></script>
<script src="/static/admin/layuiadmin/layui/layui.js"></script>
<script>
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });
    layui.config({
        base: '/static/admin/layuiadmin/' //静态资源所在路径
    }).extend({
        index: 'lib/index' //主入口模块
    }).use(['element','form','layer','table','upload','laydate'],function () {
        var element = layui.element;
        var layer = layui.layer;
        var form = layui.form;
        var table = layui.table;
        var upload = layui.upload;
        var laydate = layui.laydate;

        //错误提示
    @if(count($errors)>0)
    @foreach($errors->all() as $error)
        layer.msg("{{$error}}",{icon:5});
    @break
    @endforeach
    @endif

    //信息提示
    @if(session('status'))
        layer.msg("{{session('status')}}",{icon:6});
    @endif

    });


</script>
@yield('script')
</body>
</html>
此时浏览 /admin 即可以操作左侧主页下的 控制台， 主页一， 主页二查看实时效果了



三.设置登陆功能

15.设置路由 /routes/web.php
// 登陆使用
Route::group(['prefix' => 'admin'],function() {
    // 登陆页面
    Route::get('/login',[App\Http\Controllers\Admin\LoginController::class, 'showLoginForm'])
        ->name('admin.loginForm');

    // 登陆提交页面
    Route::post('/login',[App\Http\Controllers\Admin\LoginController::class, 'login'])->name('admin.login');

    // 退出登陆
    Route::get('/logout',[App\Http\Controllers\Admin\LoginController::class, 'logout'])->name('admin.logout');
});

16. 安装ui用户验证包
composer require laravel/ui

17. 建立以上路由对应控制器和方法
/app/Http/Controllers/Admin/LoginController.php
用到的方法可以查看文件 /vendor/laravel/ui/auth-backend/AuthenticatesUsers.php
文件有各种方法，可重新定义，比如登陆用的是邮箱，现在修为用户名



namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use Illuminate\Http\Request;

class LoginController extends Controller {

    use AuthenticatesUsers;
    /**
     * 登陆页面
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function showLoginForm() {
        return view('admin.login_register.login');
    }

    /**
     * 设置登陆成功后的跳转页
     * @return string
     */
    public function redirectTo(){
        return route('admin.layout');
    }

    /**
     * 设置登陆字段
     * @return string
     */
    public function username()
    {
        return 'name';
    }

    /**
     * 登陆退出
     * @param Request $request
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function logout(Request $request) {
        $this->guard()->logout();
        $request->session()->invalidate();
        return redirect(route('admin.loginForm'));
    }
}

18.分别建立上面对应的模板文件
/resources/views/admin/login_register/login.blade.php
/resources/views/admin/login_register/base.blade.php
上面两个文件参考layuiadmin的文件/layuiAdmin/admin/std/dist/views/user/login.html
此时访问 /admin/login 
即可用上面两个注册好的账号正确登陆

19.已经添加了用户认证，此时，在路由中，分别加上对应的认证中间件
比如：上面的后台布局，要用户认证，则修改成如下
// 后台布局
Route::group(['prefix' => 'admin','middleware'=>'auth'], function() {

    // 后台首页
    Route::get('/',[App\Http\Controllers\Admin\IndexController::class, 'layout'])->name('admin.layout');

    // layuiadmin原模板模块 - 控制台
    Route::get('/index',[App\Http\Controllers\Admin\IndexController::class, 'index'])->name('admin.index');

    // layuiadmin原模板模块 - 主页一
    Route::get('/index1',[App\Http\Controllers\Admin\IndexController::class, 'index1'])->name('admin.index1');

    // layuiadmin原模板模块 - 主页二
    Route::get('/index2',[App\Http\Controllers\Admin\IndexController::class, 'index2'])->name('admin.index2');

});

20.添加退出功能，以便能正常使用登陆认证功能
在/resources/views/admin/layout.blade.php添加退出链接
即 
<dd  style="text-align: center;"><a href="">退出</a></dd>
修改为
<dd  style="text-align: center;"><a href="{{route('admin.logout')}}">退出</a></dd>
此时登陆和退出，都能正常使用

21.以上退出之后，当默认访问 /admin时，会报错，说没有找到 Route[login],
这个是因为中间件
/app/Http/Middleware/Authenticate.php
认证中的跳转是这样的
    protected function redirectTo($request)
    {
        if (! $request->expectsJson()) {
           return route('login');
        }
    }
没有定义login相关的命名路由，

修改中间上面的方法中的路由，定位到已经定义过的命名路由
		
    protected function redirectTo($request)
    {
        if (! $request->expectsJson()) {
           //  return route('login');
		   return route('admin.loginForm');
		   
        }
    }


22.为了操作方法，对 模板 
/resources/views/admin/layout.blade.php
进行删减内容，并在左侧添加  系统管理 和 产品管理
修改如下

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>layuiAdmin std - 通用后台管理模板系统（iframe标准版）</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link rel="stylesheet" href="/static/admin/layuiadmin/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="/static/admin/layuiadmin/style/admin.css" media="all">
</head>
<body class="layui-layout-body">

<div id="LAY_app">
    <div class="layui-layout layui-layout-admin">
        <div class="layui-header">
            <!-- 头部区域 -->
            <ul class="layui-nav layui-layout-left">
                <li class="layui-nav-item layadmin-flexible" lay-unselect>
                    <a href="javascript:;" layadmin-event="flexible" title="侧边伸缩">
                        <i class="layui-icon layui-icon-shrink-right" id="LAY_app_flexible"></i>
                    </a>
                </li>
                <li class="layui-nav-item" lay-unselect>
                    <a href="javascript:;" layadmin-event="refresh" title="刷新">
                        <i class="layui-icon layui-icon-refresh-3"></i>
                    </a>
                </li>
            </ul>
            <ul class="layui-nav layui-layout-right" lay-filter="layadmin-layout-right">

                <li class="layui-nav-item" lay-unselect>
                    <a lay-href="app/message/index.html" layadmin-event="message" lay-text="消息中心">
                        <i class="layui-icon layui-icon-notice"></i>

                        <!-- 如果有新消息，则显示小圆点 -->
                        <span class="layui-badge-dot"></span>
                    </a>
                </li>
                <li class="layui-nav-item layui-hide-xs" lay-unselect>
                    <a href="javascript:;" layadmin-event="note">
                        <i class="layui-icon layui-icon-note"></i>
                    </a>
                </li>
                <li class="layui-nav-item layui-hide-xs" lay-unselect>
                    <a href="javascript:;" layadmin-event="fullscreen">
                        <i class="layui-icon layui-icon-screen-full"></i>
                    </a>
                </li>
                <li class="layui-nav-item" lay-unselect>
                    <a href="javascript:;">
                        <cite>贤心</cite>
                    </a>
                    <dl class="layui-nav-child">
                        <dd><a lay-href="set/user/info.html">基本资料</a></dd>
                        <dd><a lay-href="set/user/password.html">修改密码</a></dd>
                        <hr>
                        <dd  style="text-align: center;"><a href="{{route('admin.logout')}}">退出</a></dd>
                    </dl>
                </li>

                <li class="layui-nav-item layui-hide-xs" lay-unselect>
                    <a href="javascript:;" layadmin-event="about"><i class="layui-icon layui-icon-more-vertical"></i></a>
                </li>
                <li class="layui-nav-item layui-show-xs-inline-block layui-hide-sm" lay-unselect>
                    <a href="javascript:;" layadmin-event="more"><i class="layui-icon layui-icon-more-vertical"></i></a>
                </li>
            </ul>
        </div>

        <!-- 侧边菜单 -->
        <div class="layui-side layui-side-menu">
            <div class="layui-side-scroll">
                <div class="layui-logo" lay-href="home/console.html">
                    <span>layuiAdmin</span>
                </div>

                <ul class="layui-nav layui-nav-tree" lay-shrink="all" id="LAY-system-side-menu" lay-filter="layadmin-system-side-menu">
                    <li data-name="home" class="layui-nav-item layui-nav-itemed">
                        <a href="javascript:;" lay-tips="主页" lay-direction="2">
                            <i class="layui-icon layui-icon-home"></i>
                            <cite>主页</cite>
                        </a>
                        <dl class="layui-nav-child">
                            <dd data-name="console" class="layui-this">
                                <a lay-href="{{route('admin.index')}}">控制台</a>
                            </dd>
                            <dd data-name="console">
                                <a lay-href="{{route('admin.index1')}}">主页一</a>
                            </dd>
                            <dd data-name="console">
                                <a lay-href="{{route('admin.index2')}}">主页二</a>
                            </dd>
                        </dl>
                    </li>



                    <li data-name="user" class="layui-nav-item">
                        <a href="javascript:;" lay-tips="系统管理" lay-direction="2">
                            <i class="layui-icon layui-icon-util"></i>
                            <cite>系统管理</cite>
                        </a>
                        <dl class="layui-nav-child">
                            <dd>
                                <a lay-href="">系统用户管理</a>
                            </dd>
                            <dd>
                                <a lay-href="">角色管理</a>
                            </dd>
                            <dd>
                                <a lay-href="">权限管理</a>
                            </dd>
                        </dl>
                    </li>

                    <li data-name="user" class="layui-nav-item">
                        <a href="javascript:;" lay-tips="产品管理" lay-direction="2">
                            <i class="layui-icon layui-icon-read"></i>
                            <cite>产品管理</cite>
                        </a>
                        <dl class="layui-nav-child">
                            <dd>
                                <a lay-href="">产品列表管理</a>
                            </dd>
                        </dl>
                    </li>






                    <li data-name="get" class="layui-nav-item">
                        <a href="javascript:;" lay-href="//www.layui.com/admin/#get" lay-tips="授权" lay-direction="2">
                            <i class="layui-icon layui-icon-auz"></i>
                            <cite>授权</cite>
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- 页面标签 -->
        <div class="layadmin-pagetabs" id="LAY_app_tabs">
            <div class="layui-icon layadmin-tabs-control layui-icon-prev" layadmin-event="leftPage"></div>
            <div class="layui-icon layadmin-tabs-control layui-icon-next" layadmin-event="rightPage"></div>
            <div class="layui-icon layadmin-tabs-control layui-icon-down">
                <ul class="layui-nav layadmin-tabs-select" lay-filter="layadmin-pagetabs-nav">
                    <li class="layui-nav-item" lay-unselect>
                        <a href="javascript:;"></a>
                        <dl class="layui-nav-child layui-anim-fadein">
                            <dd layadmin-event="closeThisTabs"><a href="javascript:;">关闭当前标签页</a></dd>
                            <dd layadmin-event="closeOtherTabs"><a href="javascript:;">关闭其它标签页</a></dd>
                            <dd layadmin-event="closeAllTabs"><a href="javascript:;">关闭全部标签页</a></dd>
                        </dl>
                    </li>
                </ul>
            </div>
            <div class="layui-tab" lay-unauto lay-allowClose="true" lay-filter="layadmin-layout-tabs">
                <ul class="layui-tab-title" id="LAY_app_tabsheader">
                    <li lay-id="" lay-attr="" class="layui-this"><i class="layui-icon layui-icon-home"></i></li>
                </ul>
            </div>
        </div>


        <!-- 主体内容 -->
        <div class="layui-body" id="LAY_app_body">
            <div class="layadmin-tabsbody-item layui-show">
                <iframe src="{{route('admin.index')}}" frameborder="0" class="layadmin-iframe"></iframe>
            </div>
        </div>

        <!-- 辅助元素，一般用于移动设备下遮罩 -->
        <div class="layadmin-body-shade" layadmin-event="shade"></div>
    </div>
</div>

<script src="/static/admin/layuiadmin/layui/layui.js"></script>
<script>
    layui.config({
        base: '/static/admin/layuiadmin/' //静态资源所在路径
    }).extend({
        index: 'lib/index' //主入口模块
    }).use('index');
</script>


</body>
</html>


23.开发系统管理->系统用户管理功能，在路由文件
/routes/web.php
添加如下内容

// 系统管理
Route::group(['prefix' => 'admin','middleware' => 'auth'],function() {
    // 获取系统用户列表
    Route::get('/user',[App\Http\Controllers\Admin\UserController::class, 'index'])
        ->name('admin.user');

});

24.建立文件 /app/Http/Controllers/Admin/UserController.php
并添加如下内容

<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;

class UserController extends Controller
{
    public function index() {
        return view('admin.user.index');
    }
}

25.那建上面的模板文件 /resources/views/admin/user/index.blade.php

26.在 /resources/views/admin/layout.blade.php文件中，修改
<a lay-href="">系统用户管理</a> 
修改为
<a lay-href="{{route('admin.user')}}">系统用户管理</a> 

此时可以浏览点击左侧 系统管理 -> 系统用户管理 了

27. 在文件 /resources/views/admin/user/index.blade.php 添加内容，
可参考文件
/layuiAdmin/admin/std/dist/views/user/user/list.html

@extends('admin.base')

@section('content')
<div class="layui-card">

    <div class="layui-card-header layuiadmin-card-header-auto">
        <div class="layui-btn-group">

            <button class="layui-btn layui-btn-sm layui-btn-danger" id="listDelete">删 除</button>

            <a class="layui-btn layui-btn-sm" href="{{ route('admin.user.create') }}">添 加</a>
            <button class="layui-btn layui-btn-sm" id="memberSearch">搜索</button>
        </div>
        <div class="layui-form">
            <div class="layui-input-inline">
                <input type="text" name="name" id="name" placeholder="用户名" class="layui-input">
            </div>
            <div class="layui-input-inline">
                <input type="text" name="email" id="email" placeholder="邮箱" class="layui-input">
            </div>
        </div>
    </div>

    <div class="layui-card-body">
        <table id="dataTable" lay-filter="dataTable"></table>
        <script type="text/html" id="options">
            <div class="layui-btn-group">

                <a class="layui-btn layui-btn-sm" lay-event="edit">编辑</a>


                <a class="layui-btn layui-btn-sm" lay-event="role">角色</a>


                <a class="layui-btn layui-btn-sm" lay-event="permission">权限</a>

                <a class="layui-btn layui-btn-danger layui-btn-sm " lay-event="del">删除</a>
            </div>
        </script>
    </div>

</div>
@endsection

@section('script')

<script>
    layui.use(['layer','table','form'],function () {
        var layer = layui.layer;
        var form = layui.form;
        var table = layui.table;

        //用户表格初始化
        var dataTable = table.render({
            elem: '#dataTable'
            ,height: 500
            ,url: "{{ route('admin.data') }}" //数据接口
            ,where:{model:"user"}
            ,page: true //开启分页
            ,cols: [[ //表头
                {checkbox: true,fixed: true}
                ,{field: 'id', title: 'ID', sort: true,width:80}
                ,{field: 'name', title: '用户名'}
				,{field: 'email', title: '邮箱'}
                ,{field: 'created_at', title: '创建时间'}
                ,{field: 'updated_at', title: '更新时间'}
                ,{fixed: 'right', width: 320, align:'center', toolbar: '#options'}
            ]]
        });

        //监听工具条
        table.on('tool(dataTable)', function(obj){ //注：tool是工具条事件名，dataTable是table原始容器的属性 lay-filter="对应的值"
            var data = obj.data //获得当前行数据
                ,layEvent = obj.event; //获得 lay-event 对应的值
            if(layEvent === 'del'){
                layer.confirm('确认删除吗？', function(index){
                    $.post("{{ route('admin.user.destroy') }}",{_method:'delete',ids:[data.id]},function (result) {
                        if (result.code==0){
                            obj.del(); //删除对应行（tr）的DOM结构
                        }
                        layer.close(index);
                        layer.msg(result.msg,{icon:6})
                    });
                });
            } else if(layEvent === 'edit'){
                location.href = '/admin/user/'+data.id+'/edit';
            } else if (layEvent === 'role'){
                location.href = '/admin/user/'+data.id+'/role';
            } else if (layEvent === 'permission'){
                location.href = '/admin/user/'+data.id+'/permission';
            }
        });

        //按钮批量删除
        $("#listDelete").click(function () {
            var ids = []
            var hasCheck = table.checkStatus('dataTable')
            var hasCheckData = hasCheck.data
            if (hasCheckData.length>0){
                $.each(hasCheckData,function (index,element) {
                    ids.push(element.id)
                })
            }
            if (ids.length>0){
                layer.confirm('确认删除吗？', function(index){
                    $.post("{{ route('admin.user.destroy') }}",{_method:'delete',ids:ids},function (result) {
                        if (result.code==0){
                            dataTable.reload()
                        }
                        layer.close(index);
                        layer.msg(result.msg,{icon:6})
                    });
                })
            }else {
                layer.msg('请选择删除项',{icon:5})
            }
        })

        // 搜索
        $("#memberSearch").click(function () {
            var name = $("#name").val();
            var email = $("#email").val();
            dataTable.reload({
                where:{name:name,email:email},
                page:{curr:1}
            })
        })
    })
</script>

@endsection

28.开发上面的对应路由方法
/routes/web.php
修改为如下内容
// 系统管理
Route::group(['prefix' => 'admin','middleware' => 'auth'],function() {
	.......
    //添加系统用户
    Route::get('/create',[App\Http\Controllers\Admin\UserController::class, 'create'])
        ->name('admin.user.create');
    // 获取系统用户列表
    Route::get('/data',[App\Http\Controllers\Admin\UserController::class, 'data'])
        ->name('admin.data');
    //删除系统用户
    Route::delete('user/destroy',[App\Http\Controllers\Admin\UserController::class, 'destroy'])
        ->name('admin.user.destroy');

});

29. 在文件中/app/Http/Controllers/Admin/UserController.php
添加如下方法
<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class UserController extends Controller
{
    public function index() {
        return view('admin.user.index');
    }

    /**
     * 获取用户列表
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function data(Request $request) {
        $sql = "select * from users where 1";
        $sqlCount = "select count(*) as total from users where 1";
        $whereField = [];
        if($request->get('name')){
            $sql .= " and name = :name";
            $sqlCount .= " and name = :name";
            $whereField['name'] = $request->get('name');
        }
        if($request->get('email')){
            $sql .= " and email = :email";
            $sqlCount .= " and email = :email";
            $whereField['email'] = $request->get('email');
        }
        $page = 1;
        $pagesize = 10;
        if($request->get('page')){
            $page = intval($request->get('page'));
            if($page < 1){
                $page = 1;
            }
        }

        if($request->get('limit')){
            $pagesize = $request->get('limit');
            if($pagesize < 1) {
                $pagesize = 10;
            }
        }
        $start_num = ($page - 1) * $pagesize;
        $sql .= " limit {$start_num},{$pagesize}";
        if($whereField) {
            $listResult= DB::select($sql,$whereField);
            $totalCount = DB::selectOne($sqlCount,$whereField);
        }else{
            $listResult= DB::select($sql);
            $totalCount = DB::selectOne($sqlCount);
        }


        $listData = [];
        foreach ($listResult as $data_row) {
            $listData[] = $data_row;
        }

        $data = [
            'code' => 0,
            'msg' => '正在请求中...',
            'count' => $totalCount->total,
            'data' => $listData
        ];
        return response()->json($data);
    }

    /**
     * 添加新用户
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function create() {
        return view('admin.user.create');
    }

    /**
     * 保存新增用户
     */
    public function store(Request $request) {
        $data_input = $request->all();

        $name = $data_input['name'];
        $password = bcrypt($data_input['password']);
        $email = $data_input['email'];
        $data = ['name' => $name,'password' => $password,'email' => $email];

        if(User::create($data)) {
            return redirect()->to(route('admin.user'))->with(['status' => '添加用户成功']);
        }
        return redirect()->to(route('admin.user'))->withErrors(['status' => '系统错误']);
    }
}



	




30.添加上面对应的模板文件
/resources/views/admin/user/create.blade.php

@extends('admin.base')

@section('content')
<div class="layui-card">
    <div class="layui-card-header  layuiadmin-card-header-auto">
        <h2>添加用户</h2>
    </div>
    <div class="layui-card-body">
        <form class="layui-form" action="{{route('admin.user.store')}}" method="post">
            @include('admin.user._form')
        </form>
    </div>
</div>
@endsection

31.分别添加对应的路由和
模板文件 /resources/views/admin/user/_form.blade.php 
路由 /routes/web.php 如下 
// 系统管理
Route::group(['prefix' => 'admin','middleware' => 'auth'],function() {
	.........	
    //保存用户
    Route::post('/store',[App\Http\Controllers\Admin\UserController::class, 'store'])
        ->name('admin.user.store');

});

32.在文件中/app/Http/Controllers/Admin/UserController
添加删除方法
    /**
     * 删除用户
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy(Request $request) {
        $ids = $request->get('ids');

        if (empty($ids)){
            return response()->json(['code'=>1,'msg'=>'请选择删除项']);
        }
        if (User::destroy($ids)){
            return response()->json(['code'=>0,'msg'=>'删除成功']);
        }
        return response()->json(['code'=>1,'msg'=>'删除失败']);

    }
	
此时删除用户的方法，可使用了	
	
33. 添加编辑用户，在文件
/routes/web.php中添加

// 系统管理
Route::group(['prefix' => 'admin','middleware' => 'auth'],function() {
	.......
    //编辑用户
    Route::get('user/{id}/edit',[App\Http\Controllers\Admin\UserController::class, 'edit'])
        ->name('admin.user.edit');
    // 保存编辑用户
    Route::put('user/{id}/update',[App\Http\Controllers\Admin\UserController::class, 'update'])
        ->name('admin.user.update');

});

34.在文件中添加对应的修改方法
/app/Http/Controllers/Admin/UserController.php

    /**
     * 显示编辑用户
     * @param $id
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function edit($id) {
        $user = User::findOrFail($id);
        return view('admin.user.edit',compact('user'));
    }

    /**
     * 保存编辑的用户
     * @param UserUpdateRequest $request
     * @param $id
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update(UserUpdateRequest $request, $id)
    {
        $user = User::findOrFail($id);

        $data = $request->except('password');
        if ($request->get('password')){
            $data['password'] = bcrypt($request->get('password'));
        }
        if ($user->update($data)){
            return redirect()->to(route('admin.user'))->with(['status'=>'更新用户成功']);
        }
        return redirect()->to(route('admin.user'))->withErrors('系统错误');
    }

35. 添加对应的请求方法文件
/app/Http/Requests/UserUpdateRequest.php

<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class UserUpdateRequest extends FormRequest {
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        $reture = ['name' => ['required', 'string']];
        if ($this->get('password') || $this->get('password_confirmation')){
            $reture['password'] = 'required|confirmed|min:8|max:14';
        }
        return $reture;
    }
}

36.添加对应的模板文件
/resources/views/admin/user/edit.blade.php

@extends('admin.base')

@section('content')
<div class="layui-card">
    <div class="layui-card-header layuiadmin-card-header-auto">
        <h2>更新用户</h2>
    </div>
    <div class="layui-card-body">
        <form class="layui-form" action="{{route('admin.user.update',['id'=>$user->id])}}" method="post">
            <input type="hidden" name="id" value="{{$user->id}}">
            {{method_field('put')}}
            @include('admin.user._form')
        </form>
    </div>
</div>
@endsection

此时对应的用户编辑可以使用了,
以上用户的添加，删除，编辑，查找，都可以正使用了，
接下来，添加对应的权限功能

37.安装权限功能，选择 https://spatie.be/docs/laravel-permission
根据文档安装,执行

composer require spatie/laravel-permission

config/app.php 文件中，添加
'providers' => [
    // ...
    Spatie\Permission\PermissionServiceProvider::class,
];

执行以下命令
php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"

php artisan optimize:clear

php artisan migrate

38.开发角色和权限功能，大部功能，与上面的系统用户增删改查类似
开发角色，在路由文件中
/routes/web.php
添加
// 角色管理
Route::group(['prefix' => 'admin','middleware'=>['auth']],function() {
    // 展示角色列表
    Route::get('role',[App\Http\Controllers\Admin\RoleController::class,'index'])
        ->name('admin.role');
    // 获取角色数据
    Route::get('role/data',[App\Http\Controllers\Admin\RoleController::class,'data'])
        ->name('admin.role.data');
    // 添加角色
    Route::get('role/create',[App\Http\Controllers\Admin\RoleController::class,'create'])
        ->name('admin.role.create');
    // 保存添加的角色
    Route::post('role/store',[App\Http\Controllers\Admin\RoleController::class,'store'])
        ->name('admin.role.store');
    //编辑角色
    Route::get('role/{id}/edit',[App\Http\Controllers\Admin\RoleController::class,'edit'])
        ->name('admin.role.edit');
    // 保存编辑
    Route::put('role/{id}/update',[App\Http\Controllers\Admin\RoleController::class,'update'])
        ->name('admin.role.update');
    //修改角色的拥有的权限
    Route::get('role/{id}/permission',[App\Http\Controllers\Admin\RoleController::class,'permission'])
        ->name('admin.role.permission');
    // 保存角色修改的权限
    Route::put('role/{id}/assignPermission',[App\Http\Controllers\Admin\RoleController::class,'assignPermission'])
        ->name('admin.role.assignPermission');
});

39. 在 /resources/views/admin/layout.blade.php修改 
<a lay-href="">角色管理</a>
为
<a lay-href="{{route('admin.role')}}">角色管理</a>

40.建立角色控制器
/app/Http/Controllers/Admin/RoleController.php
<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Spatie\Permission\Models\Role;

class RoleController extends Controller {

    /**
     * 显示角色列表
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function index() {
        return view('admin.role.index');
    }
	
	/**
     * 添加创建新角色
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function create() {
        return view('admin.role.create');
    }
}



41.分别添加以上的模板文件
/resources/views/admin/role/index.blade.php

@extends('admin.base')

@section('content')
<div class="layui-card">
    <div class="layui-card-header layuiadmin-card-header-auto">
        <div class="layui-btn-group">

            <a class="layui-btn layui-btn-sm" href="{{ route('admin.role.create') }}">添 加</a>

        </div>
    </div>
    <div class="layui-card-body">
        <table id="dataTable" lay-filter="dataTable"></table>
        <script type="text/html" id="options">
            <div class="layui-btn-group">

                <a class="layui-btn layui-btn-sm" lay-event="edit">编辑</a>


                <a class="layui-btn layui-btn-sm" lay-event="permission">权限</a>


                <a class="layui-btn layui-btn-danger layui-btn-sm" lay-event="del">删除</a>

            </div>
        </script>
    </div>
</div>
@endsection

@section('script')
<script>
    layui.use(['layer','table','form'],function () {
        var layer = layui.layer;
        var form = layui.form;
        var table = layui.table;
        //用户表格初始化
        var dataTable = table.render({
            elem: '#dataTable'
            ,height: 500
            ,url: "{{ route('admin.role.data') }}" //数据接口
            ,page: true //开启分页
            ,cols: [[ //表头
                {checkbox: true,fixed: true}
                ,{field: 'id', title: 'ID', sort: true,width:80}
                ,{field: 'name', title: '角色名称'}
                ,{field: 'created_at', title: '创建时间'}
                ,{field: 'updated_at', title: '更新时间'}
                ,{fixed: 'right', width: 260, align:'center', toolbar: '#options'}
            ]]
        });

        //监听工具条
        table.on('tool(dataTable)', function(obj){ //注：tool是工具条事件名，dataTable是table原始容器的属性 lay-filter="对应的值"
            var data = obj.data //获得当前行数据
                ,layEvent = obj.event; //获得 lay-event 对应的值
            if(layEvent === 'del'){
                layer.confirm('确认删除吗？', function(index){
                    $.post("{{ route('admin.role.destroy') }}",{_method:'delete',ids:[data.id]},function (result) {
                        if (result.code==0){
                            obj.del(); //删除对应行（tr）的DOM结构
                        }
                        layer.close(index);
                        layer.msg(result.msg,{icon:6})
                    });
                });
            } else if(layEvent === 'edit'){
                location.href = '/admin/role/'+data.id+'/edit';
            } else if (layEvent === 'permission'){
                location.href = '/admin/role/'+data.id+'/permission';
            }
        });


    })
</script>
@endsection


/resources/views/admin/role_form.blade.php

{{csrf_field()}}
<div class="layui-form-item">
    <label for="" class="layui-form-label">名称</label>
    <div class="layui-input-block">
        <input class="layui-input" type="text" name="name" lay-verify="required" value="{{$role->name??old('name')}}" placeholder="如:admin">
    </div>
</div>

<div class="layui-form-item">
    <div class="layui-input-block">
        <button type="submit" class="layui-btn" lay-submit="" >确 认</button>
        <a href="{{route('admin.role')}}" class="layui-btn" >返 回</a>
    </div>
</div>

/resources/views/admin/role/create.blade.php

@extends('admin.base')

@section('content')
    <div class="layui-card">
        <div class="layui-card-header layuiadmin-card-header-auto">
            <h2>添加角色</h2>
        </div>
        <div class="layui-card-body">
            <form action="{{route('admin.role.store')}}" method="post" class="layui-form">
                @include('admin.role._form')
            </form>
        </div>
    </div>
@endsection

42.控制器添加获取数据方法
/app/Http/Controllers/Admin/RoleController.php

    /**
     * 获取角色内容
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function data(Request $request) {
        $sql = "select * from roles";
        $sqlCount = "select count(*) as total from roles";
        $page = 1;
        $pagesize = 10;
        if($request->get('page')){
            $page = intval($request->get('page'));
            if($page < 1){
                $page = 1;
            }
        }

        if($request->get('limit')){
            $pagesize = $request->get('limit');
            if($pagesize < 1) {
                $pagesize = 10;
            }
        }
        $start_num = ($page - 1) * $pagesize;
        $sql .= " limit {$start_num},{$pagesize}";
        $listResult= DB::select($sql);
        $totalCount= DB::selectOne($sqlCount);
        $listData = [];
        foreach ($listResult as $data_row) {
            $listData[] = $data_row;
        }
        $data = [
            'code' => 0,
            'msg' => '正在请求中...',
            'count' => $totalCount->total,
            'data' => $listData
        ];
        return response()->json($data);
    }

此时角色浏览，添加了

43.编辑,删除角色功能
控制器添加方法
/app/Http/Controllers/Admin/RoleController.php
    /**
     * 编辑角色
     * @param $id
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function edit($id) {
        $role = Role::findOrFail($id);
        return view('admin.role.edit',compact('role'));
    }

    /**
     * 更新角色
     * @param Request $request
     * @param $id
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update(Request $request, $id)
    {
        $role = Role::findOrFail($id);

        $data = ['name' => $request->input('name')];

        if ($role->update($data)){
            return redirect()->to(route('admin.role'))->with(['status'=>'更新角色成功']);
        }
        return redirect()->to(route('admin.role'))->withErrors('系统错误');
    }
	
    /**
     * 删除用户
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy(Request $request) {
        $ids = $request->get('ids');

        if (empty($ids)){
            return response()->json(['code'=>1,'msg'=>'请选择删除项']);
        }
        if (Role::destroy($ids)){
            return response()->json(['code'=>0,'msg'=>'删除成功']);
        }
        return response()->json(['code'=>1,'msg'=>'删除失败']);
    }	
	
	
44.模板添加以下文件
/resources/views/admin/role/edit.blade.php

@extends('admin.base')

@section('content')
<div class="layui-card">
    <div class="layui-card-header layuiadmin-card-header-auto">
        <h2>更新角色</h2>
    </div>
    <div class="layui-card-body">
        <form class="layui-form" action="{{route('admin.role.update',['id'=>$role->id])}}" method="post">
            <input type="hidden" name="id" value="{{$role->id}}">
            {{method_field('put')}}
            @include('admin.role._form')
        </form>
    </div>
</div>
@endsection

45.添加角色删除路由
/routes/web.php
    //删除角色
    Route::delete('role/destroy',[App\Http\Controllers\Admin\RoleController::class, 'destroy'])
        ->name('admin.role.destroy');

至此，角色的增删改，都可以了，这里不开发查询功能

同理，开发权限，基本功能与上面的角色是一样的

46.路由权限开发
/routes/web.php
// 权限管理
Route::group(['prefix' => 'admin','middleware'=>'auth'],function() {
    // 权限展示
    Route::get('permission',[App\Http\Controllers\Admin\PermissionController::class,'index'])
        ->name('admin.permission');
    // 获取权限数据
    Route::get('permission/data',[App\Http\Controllers\Admin\PermissionController::class,'data'])
        ->name('admin.permission.data');
    //创建权限
    Route::get('permission/create',[App\Http\Controllers\Admin\PermissionController::class,'create'])
        ->name('admin.permission.create');
    // 保存新创建的权限
    Route::post('permission/store',[App\Http\Controllers\Admin\PermissionController::class,'store'])
        ->name('admin.permission.store');
    //编辑权限
    Route::get('permission/{id}/edit',[App\Http\Controllers\Admin\PermissionController::class,'edit'])
        ->name('admin.permission.edit');
    // 保存编辑的权限
    Route::put('permission/{id}/update',[App\Http\Controllers\Admin\PermissionController::class,'update'])
        ->name('admin.permission.update');
    // 删除权限
    Route::delete('permission/destroy',[App\Http\Controllers\Admin\PermissionController::class,'destroy'])
        ->name('admin.permission.destroy');
});

47.修改权限数据表，增加显示名字字段
ALTER TABLE `permissions` ADD COLUMN 
`display_name` VARCHAR(100)  NOT NULL DEFAULT ''  COMMENT '权限显示的名称'; 

ALTER TABLE `permissions` ADD COLUMN 
`parent_id` int(11) NOT NULL DEFAULT '0' COMMENT '对应父类名称'; 

48.建立权限模型
/app/Models/Permission.php

<?php

namespace App\Models;

use Spatie\Permission\Models\Permission as SpatiePermission;

class Permission extends SpatiePermission
{

}

49.在控制器中添加权限分类获取方法
<?php

namespace App\Http\Controllers;


class Controller extends BaseController
{
   .......

    /**
     * 获取权限分类列表方法方法
     * @param array $list
     * @param string $pk
     * @param string $pid
     * @param string $child
     * @param int $root
     * @return array
     */
    public function tree($list=[], $pk = 'id', $pid = 'parent_id',$child='_child', $root = 0) {
        $tree = [];
        if(empty($list)){
            $list = Permission::get()->toArray();
        }
        if(is_array($list)) {
            $refer = array();
            // ID作为键值的数组
            foreach ($list as $key => $data) {
                $refer[$data[$pk]] = & $list[$key];
            }
            foreach ($list as $key => $data) {
                $parentId = $data[$pid];
                if($parentId == $root) {
                    $tree[] = & $list[$key];
                }else{
                    if(isset($refer[$parentId])){
                        $parent = & $refer[$parentId];
                        $parent[$child][] = & $list[$key];
                    }
                }
            }
        }
        return $tree;
    }
}


50.建立权限控制器
/app/Http/Controllers/Admin/PermissionController.php
<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class PermissionController extends Controller
{
    /**
     * 展示权限列表
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function index()
    {
        return view('admin.permission.index');
    }

    /**
     * 获取列表数据
     * @param Request $request
     */
    public function data(Request $request) {

        $parent_id = $request->get('parent_id',0);
        if(intval($parent_id) < 0) {
            $parent_id = 0;
        }else{
            $parent_id = intval($parent_id);
        }
        $sql = "select * from permissions where parent_id = :parent_id ";
        $sqlCount = "select count(*) as total from permissions where parent_id = :parent_id ";
        $whereField = ['parent_id' => $parent_id];

        $page = 1;
        $pagesize = 10;
        if($request->get('page')){
            $page = intval($request->get('page'));
            if($page < 1){
                $page = 1;
            }
        }

        if($request->get('limit')){
            $pagesize = $request->get('limit');
            if($pagesize < 1) {
                $pagesize = 10;
            }
        }
        $start_num = ($page - 1) * $pagesize;
        $sql .= " limit {$start_num},{$pagesize}";
        if($whereField) {
            $listResult= DB::select($sql,$whereField);
            $totalCount = DB::selectOne($sqlCount,$whereField);
        }else{
            $listResult= DB::select($sql);
            $totalCount = DB::selectOne($sqlCount);
        }


        $listData = [];
        foreach ($listResult as $data_row) {
            $listData[] = $data_row;
        }
        $data = [
            'code' => 0,
            'msg' => '正在请求中...',
            'count' => $totalCount->total,
            'data' => $listData
        ];
        return response()->json($data);
    }
}

51. 修改模板路由
/resources/views/admin/layout.blade.php

<a lay-href="">权限管理</a>
修改为
<a lay-href="">权限管理</a>

52.添加以上模板文件
/resources/views/admin/permission/index.blade.php

@extends('admin.base')

@section('content')
    <div class="layui-card">
        <div class="layui-card-header layuiadmin-card-header-auto">
            <div class="layui-btn-group ">

                    <button class="layui-btn layui-btn-sm layui-btn-danger" id="listDelete">删 除</button>


                    <a class="layui-btn layui-btn-sm" href="{{ route('admin.permission.create') }}">添 加</a>

                <button class="layui-btn layui-btn-sm" id="returnParent" pid="0">返回上级</button>
            </div>
        </div>
        <div class="layui-card-body">
            <table id="dataTable" lay-filter="dataTable"></table>
            <script type="text/html" id="options">
                <div class="layui-btn-group">

                        <a class="layui-btn layui-btn-sm" lay-event="children">子权限</a>


                        <a class="layui-btn layui-btn-sm" lay-event="edit">编辑</a>


                        <a class="layui-btn layui-btn-danger layui-btn-sm" lay-event="del">删除</a>

                </div>
            </script>
        </div>
    </div>
@endsection

@section('script')

    <script>
        layui.use(['layer','table','form'],function () {
            var layer = layui.layer;
            var form = layui.form;
            var table = layui.table;
            //用户表格初始化
            var dataTable = table.render({
                elem: '#dataTable'
                ,height: 500
                ,url: "{{ route('admin.permission.data') }}" //数据接口
                ,page: true //开启分页
                ,cols: [[ //表头
                    {checkbox: true,fixed: true}
                    ,{field: 'id', title: 'ID', sort: true,width:80}
                    ,{field: 'name', title: '权限名称'}
                    ,{field: 'display_name', title: '显示名称'}
                    ,{field: 'created_at', title: '创建时间'}
                    ,{field: 'updated_at', title: '更新时间'}
                    ,{fixed: 'right', width: 260, align:'center', toolbar: '#options'}
                ]]
            });

            //监听工具条
            table.on('tool(dataTable)', function(obj){ //注：tool是工具条事件名，dataTable是table原始容器的属性 lay-filter="对应的值"
                var data = obj.data //获得当前行数据
                    ,layEvent = obj.event; //获得 lay-event 对应的值
                if(layEvent === 'del'){
                    layer.confirm('确认删除吗？', function(index){
                        $.post("{{ route('admin.permission.destroy') }}",{_method:'delete',ids:[data.id]},function (result) {
                            if (result.code==0){
                                obj.del(); //删除对应行（tr）的DOM结构
                            }
                            layer.close(index);
                            layer.msg(result.msg,{icon:6})
                        });
                    });
                } else if(layEvent === 'edit'){
                    location.href = '/admin/permission/'+data.id+'/edit';
                } else if (layEvent === 'children'){
                    var pid = $("#returnParent").attr("pid");
                    if (data.parent_id!=0){
                        $("#returnParent").attr("pid",pid+'_'+data.parent_id);
                    }
                    dataTable.reload({
                        where:{model:"permission",parent_id:data.id},
                        page:{curr:1}
                    })
                }
            });

            //按钮批量删除
            $("#listDelete").click(function () {
                layer.msg("由于权限重要性，系统已禁止批量删除",{icon:5});
            });
            //返回上一级
            $("#returnParent").click(function () {
                var pid = $(this).attr("pid");
                if (pid!='0'){
                    ids = pid.split('_');
                    parent_id = ids.pop();
                    $(this).attr("pid",ids.join('_'));
                }else {
                    parent_id=pid;
                }
                dataTable.reload({
                    where:{model:"permission",parent_id:parent_id},
                    page:{curr:1}
                })
            })
        })
    </script>

@endsection

此时可以访问权限列表

53.添加新增，编辑，删除权限方法
/app/Http/Controllers/Admin/PermissionController.php
先增加添加方法

class PermissionController extends Controller
{
	// ................
	    /**
     * 添加权限功能
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function create() {
        $permissions = $this->tree();
        return view('admin.permission.create',compact('permissions'));
    }

    /**
     * 处理新增加的权限功能
     * @param PermissionCreateRequest $request
     * @return \Illuminate\Http\RedirectResponse
     */
    public function store(Request $request) {
        $name = $request->input('name');
        $display_name = $request->input('display_name');
        $parent_id = $request->input('parent_id');
        $data = ['name' => $name,'display_name' => $display_name,
            'parent_id' => $parent_id];
        if(Permission::create($data)){
            return redirect()->to(route('admin.permission'))->with(['status' => '添加权限成功']);
        }else{
            return redirect()->to(route('admin.permission'))->withErrors(['status' => '系统错误']);
        }
    }
	
}


54.分别添加上面对应的模板
新增模板
/resources/views/admin/permission/create.blade.php
@extends('admin.base')

@section('content')
    <div class="layui-card">
        <div class="layui-card-header layuiadmin-card-header-auto">
            <h2>添加权限</h2>
        </div>
        <div class="layui-card-body">
            <form class="layui-form" action="{{route('admin.permission.store')}}" method="post">
                @include('admin.permission._from')
            </form>
        </div>
    </div>
@endsection


/resources/views/admin/permission/_from.blade.php

{{csrf_field()}}

<div class="layui-form-item">
    <label for="" class="layui-form-label">父级</label>
    <div class="layui-input-block">
        <select name="parent_id" lay-search>
            <option value="0">顶级权限</option>
            @forelse($permissions as $perm)
            <option value="{{$perm['id']}}" {{ isset($permission->id) && $perm['id'] == $permission->parent_id ? 'selected' : '' }} >{{$perm['display_name']}}</option>
                @if(isset($perm['_child']))
                    @foreach($perm['_child'] as $childs)
                    <option value="{{$childs['id']}}" {{ isset($permission->id) && $childs['id'] == $permission->parent_id ? 'selected' : '' }} >&nbsp;&nbsp;┗━━{{$childs['display_name']}}</option>
                                @if(isset($childs['_child']))
                    @foreach($childs['_child'] as $lastChilds)
                    <option value="{{$lastChilds['id']}}" {{ isset($permission->id) && $lastChilds['id'] == $permission->parent_id ? 'selected' : '' }} >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;┗━━{{$lastChilds['display_name']}}</option>
                    @endforeach
                    @endif
                    @endforeach
                @endif
            @empty
            @endforelse
        </select>
    </div>
</div>


<div class="layui-form-item">
    <label for="" class="layui-form-label">显示名称</label>
    <div class="layui-input-block">
        <input type="text" name="display_name" value="{{$permission->display_name??old('display_name')}}" lay-verify="required" class="layui-input" placeholder="如：系统管理">
    </div>
</div>
<div class="layui-form-item">
    <label for="" class="layui-form-label">路由</label>
    <div class="layui-input-block">
        <input class="layui-input" type="text" name="name" value="{{$permission->name??old('name')}}" placeholder="如：admin.member" >
    </div>
</div>


<div class="layui-form-item">
    <div class="layui-input-block">
        <button type="submit" class="layui-btn" lay-submit="" >确 认</button>
        <a href="{{route('admin.permission')}}" class="layui-btn"  >返 回</a>
    </div>
</div>

至此，即权限可以添加了

55.添加编辑权限模板
/resources/views/admin/permission/edit.blade.php

@extends('admin.base')

@section('content')
    <div class="layui-card">
        <div class="layui-card-header layuiadmin-card-header-auto">
            <h2>更新权限</h2>
        </div>
        <div class="layui-card-body">
            <form class="layui-form" action="{{route('admin.permission.update',['id'=>$permission->id])}}" method="post">
                {{method_field('put')}}
                <input type="hidden" name="id" value="{{ $permission->id }}">
                @include('admin.permission._from')
            </form>
        </div>
    </div>
@endsection

56.方法中添加对应的方法
/app/Http/Controllers/Admin/PermissionController.php

//
    /**
     * 编辑权限
     * @param $id
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function edit($id) {
        $permission = Permission::findOrFail($id);
        $permissions = $this->tree();
        return view('admin.permission.edit',compact('permissions','permission'));
    }

    /**
     * 保存权限修改
     * @param Request $request
     * @param $id
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update(Request $request, $id)
    {
        $permission = Permission::findOrFail($id);
        $data = [];
        $name = $request->get('name');
        $display_name = $request->get('display_name');
        $parent_id = $request->get('parent_id');
        $data['name'] = $name;
        $data['display_name'] = $display_name;
        $data['parent_id'] = $parent_id;
        if ($permission->update($data)){
            return redirect()->to(route('admin.permission'))->with(['status'=>'更新成功']);
        }
        return redirect()->to(route('admin.permission'))->withErrors('系统错误');
    }
	
    /**
     * 删除对应的权限
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy(Request $request) {
        $ids = $request->get('ids');

        if (empty($ids)){
            return response()->json(['code'=>1,'msg'=>'请选择删除项']);
        }
        if (Permission::destroy($ids)){
            return response()->json(['code'=>0,'msg'=>'删除成功']);
        }
        return response()->json(['code'=>1,'msg'=>'删除失败']);
    }

57.给角色分配权限
/app/Http/Controllers/Admin/RoleController.php
添加
//
    /**
     * 编辑角色的权限
     * @param Request $request
     * @param $id
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function permission(Request $request, $id) {
        $role = Role::findOrFail($id);
        $permissions = $this->tree();

        foreach ($permissions as $key1 => $item1){
            $permissions[$key1]['own'] = $role->hasPermissionTo($item1['id']) ? 'checked' : false ;
            if (isset($item1['_child'])){
                foreach ($item1['_child'] as $key2 => $item2){
                    $permissions[$key1]['_child'][$key2]['own'] = $role->hasPermissionTo($item2['id']) ? 'checked' : false ;
                    if (isset($item2['_child'])){
                        foreach ($item2['_child'] as $key3 => $item3){
                            $permissions[$key1]['_child'][$key2]['_child'][$key3]['own'] = $role->hasPermissionTo($item3['id']) ? 'checked' : false ;
                        }
                    }
                }
            }

        }

        return view('admin.role.permission',compact('role','permissions'));
    }

    /**
     * 更新角色的权限
     * @param Request $request
     * @param $id
     * @return \Illuminate\Http\RedirectResponse
     */
    public function assignPermission(Request $request, $id) {
        $role = Role::findOrFail($id);
        $permissions = $request->get('permissions');
        if(empty($permissions)) {
            $role->permissions()->detach();
            return redirect()->to(route('admin.role'))->with(['status'=>'已更新角色权限1']);
        }else{
            $role->syncPermissions($permissions);
            return redirect()->to(route('admin.role'))->with(['status'=>'已更新角色权限2']);
        }
    }	
	

58.新增上面的模板
/resources/views/admin/role/permission.blade.php

@extends('admin.base')

@section('content')
    <div class="layui-card">
        <div class="layui-card-header layuiadmin-card-header-auto">
            <div class="layui-btn-group ">

                    <button class="layui-btn layui-btn-sm layui-btn-danger" id="listDelete">删 除</button>


                    <a class="layui-btn layui-btn-sm" href="{{ route('admin.permission.create') }}">添 加</a>

                <button class="layui-btn layui-btn-sm" id="returnParent" pid="0">返回上级</button>
            </div>
        </div>
        <div class="layui-card-body">
            <table id="dataTable" lay-filter="dataTable"></table>
            <script type="text/html" id="options">
                <div class="layui-btn-group">

                        <a class="layui-btn layui-btn-sm" lay-event="children">子权限</a>


                        <a class="layui-btn layui-btn-sm" lay-event="edit">编辑</a>


                        <a class="layui-btn layui-btn-danger layui-btn-sm" lay-event="del">删除</a>

                </div>
            </script>
        </div>
    </div>
@endsection

@section('script')

    <script>
        layui.use(['layer','table','form'],function () {
            var layer = layui.layer;
            var form = layui.form;
            var table = layui.table;
            //用户表格初始化
            var dataTable = table.render({
                elem: '#dataTable'
                ,height: 500
                ,url: "{{ route('admin.permission.data') }}" //数据接口
                ,page: true //开启分页
                ,cols: [[ //表头
                    {checkbox: true,fixed: true}
                    ,{field: 'id', title: 'ID', sort: true,width:80}
                    ,{field: 'name', title: '权限名称'}
                    ,{field: 'display_name', title: '显示名称'}
                    ,{field: 'created_at', title: '创建时间'}
                    ,{field: 'updated_at', title: '更新时间'}
                    ,{fixed: 'right', width: 260, align:'center', toolbar: '#options'}
                ]]
            });

            //监听工具条
            table.on('tool(dataTable)', function(obj){ //注：tool是工具条事件名，dataTable是table原始容器的属性 lay-filter="对应的值"
                var data = obj.data //获得当前行数据
                    ,layEvent = obj.event; //获得 lay-event 对应的值
                if(layEvent === 'del'){
                    layer.confirm('确认删除吗？', function(index){
                        $.post("{{ route('admin.permission.destroy') }}",{_method:'delete',ids:[data.id]},function (result) {
                            if (result.code==0){
                                obj.del(); //删除对应行（tr）的DOM结构
                            }
                            layer.close(index);
                            layer.msg(result.msg,{icon:6})
                        });
                    });
                } else if(layEvent === 'edit'){
                    location.href = '/admin/permission/'+data.id+'/edit';
                } else if (layEvent === 'children'){
                    var pid = $("#returnParent").attr("pid");
                    if (data.parent_id!=0){
                        $("#returnParent").attr("pid",pid+'_'+data.parent_id);
                    }
                    dataTable.reload({
                        where:{model:"permission",parent_id:data.id},
                        page:{curr:1}
                    })
                }
            });

            //按钮批量删除
            $("#listDelete").click(function () {
                layer.msg("由于权限重要性，系统已禁止批量删除",{icon:5});
            });
            //返回上一级
            $("#returnParent").click(function () {
                var pid = $(this).attr("pid");
                if (pid!='0'){
                    ids = pid.split('_');
                    parent_id = ids.pop();
                    $(this).attr("pid",ids.join('_'));
                }else {
                    parent_id=pid;
                }
                dataTable.reload({
                    where:{model:"permission",parent_id:parent_id},
                    page:{curr:1}
                })
            })
        })
    </script>

@endsection

59.开发给用户角色和权限，路由添加
// 系统管理
Route::group(['prefix' => 'admin','middleware' => 'auth'],function() {
	//
    // 给人员分配角色
    Route::get('user/{id}/role',[App\Http\Controllers\Admin\UserController::class, 'role'])
        ->name('admin.user.role');
    Route::put('user/{id}/assignRole',[App\Http\Controllers\Admin\UserController::class, 'assignRole'])
        ->name('admin.user.assignRole');
    // 给人员分配权限
    Route::get('user/{id}/permission',[App\Http\Controllers\Admin\UserController::class, 'permission'])
        ->name('admin.user.permission');
    Route::put('user/{id}/assignPermission',[App\Http\Controllers\Admin\UserController::class, 'assignPermission'])
        ->name('admin.user.assignPermission');

});
	
60.添加角色模型
/app/Models/Role.php

<?php

namespace App\Models;

class Role extends \Spatie\Permission\Models\Role {

}

61.添加角色关联
/app/Models/User.php
添加 HasRoles,如下
class User extends Authenticatable
{	
	//
    use HasApiTokens, HasFactory, Notifiable, HasRoles;
	//
}

62.控制器添加方法
/app/Http/Controllers/Admin/UserController.php
//
    /**
     * 获取用户的角色
     * @param Request $request
     * @param $id
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function role(Request $request, $id) {
        $user = User::findOrFail($id);
        $roles = Role::get();
        foreach ($roles as $role) {
            $role->own = $user->hasRole($role) ? true : false;
        }
        return view('admin.user.role',compact('roles','user'));
    }

    /**
     * 处理编辑用户后的角色
     * @param Request $request
     * @param $id
     * @return \Illuminate\Http\RedirectResponse
     */
    public function assignRole(Request $request, $id) {
        $user = User::findOrFail($id);
        $roles = $request->get('roles',[]);
        if($user->syncRoles($roles)) {
            return redirect()->to(route('admin.user'))->with(['status'=>'更新用户角色成功']);
        }
        return redirect()->to(route('admin.user'))->withErrors(['status'=>'系统错误']);

    }

    /**
     * 获取用户拥有的权限
     * @param Request $request
     * @param $id
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\Contracts\View\View
     */
    public function permission(Request $request, $id) {
        $user = User::findOrFail($id);
        $permissions = $this->tree();
        foreach ($permissions as $key1 => $item1){
            $permissions[$key1]['own'] = $user->hasDirectPermission($item1['id']) ? 'checked' : false ;
            if (isset($item1['_child'])){
                foreach ($item1['_child'] as $key2 => $item2){
                    $permissions[$key1]['_child'][$key2]['own'] = $user->hasDirectPermission($item2['id']) ? 'checked' : false ;
                    if (isset($item2['_child'])){
                        foreach ($item2['_child'] as $key3 => $item3){
                            $permissions[$key1]['_child'][$key2]['_child'][$key3]['own'] = $user->hasDirectPermission($item3['id']) ? 'checked' : false ;
                        }
                    }
                }
            }
        }
        return view('admin.user.permission',compact('user','permissions'));
    }

    /**
     * 处理编辑用户的权限
     * @param Request $request
     * @param $id
     * @return \Illuminate\Http\RedirectResponse
     */
    public function assignPermission(Request $request, $id) {
        $user = User::findOrFail($id);
        $permissions = $request->get('permissions');

        if (empty($permissions)){
            $user->permissions()->detach();
            return redirect()->to(route('admin.user'))->with(['status'=>'已更新用户直接权限']);
        }
        $user->syncPermissions($permissions);
        return redirect()->to(route('admin.user'))->with(['status'=>'已更新用户直接权限']);
    }
	
63.建立上面对应的模板文件
/resources/views/admin/user/role.blade.php
@extends('admin.base')

@section('content')
    <style>
        .layui-form-checkbox span{width: 100px}
    </style>
    <div class="layui-card">
        <div class="layui-card-header layuiadmin-card-header-auto">
            <h2>用户【{{$user->name}}】分配角色</h2>
        </div>
        <div class="layui-card-body">
            <form class="layui-form" action="{{route('admin.user.assignRole',['id' => $user->id])}}" method="post">
                {{csrf_field()}}
                {{method_field('put')}}
                <div class="layui-form-item">
                    <label for="" class="layui-form-label">角色</label>
                    <div class="layui-input-block" style="width: 400px">
                        @forelse($roles as $role)
                            <input type="checkbox" name="roles[]" value="{{$role->id}}" title="{{$role->name}}" {{ $role->own ? 'checked' : ''  }} >
                        @empty
                            <div class="layui-form-mid layui-word-aux">还没有角色</div>
                        @endforelse
                    </div>
                </div>
                <div class="layui-form-item">
                    <div class="layui-input-block">
                        <button type="submit" class="layui-btn" lay-submit="" lay-filter="formDemo">确 认</button>
                        <a class="layui-btn" href="{{route('admin.user')}}" >返 回</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
@endsection

赋予用户权限模板
/resources/views/admin/user/permission.blade.php

@extends('admin.base')

@section('content')
    <style>
        .cate-box{margin-bottom: 15px;padding-bottom:10px;border-bottom: 1px solid #f0f0f0}
        .cate-box dt{margin-bottom: 10px;}
        .cate-box dt .cate-first{padding:10px 20px}
        .cate-box dd{padding:0 50px}
        .cate-box dd .cate-second{margin-bottom: 10px}
        .cate-box dd .cate-third{padding:0 40px;margin-bottom: 10px}
    </style>
    <div class="layui-card">
        <div class="layui-card-header layuiadmin-card-header-auto">
            <h2>用户 【{{$user->name}}】分配直接权限，直接权限与角色拥有的角色权限不冲突</h2>
        </div>
        <div class="layui-card-body">
            <form action="{{route('admin.user.assignPermission',['id'=>$user->id])}}" method="post" class="layui-form">
                {{csrf_field()}}
                {{method_field('put')}}
                @forelse($permissions as $first)
                    <dl class="cate-box">
                        <dt>
                        <div class="cate-first"><input id="menu{{$first['id']}}" type="checkbox" name="permissions[]" value="{{$first['id']}}" title="{{$first['display_name']}}" lay-skin="primary" {{$first['own']??''}} ></div>
                        </dt>
                        @if(isset($first['_child']))
                            @foreach($first['_child'] as $second)
                                <dd>
                                    <div class="cate-second"><input id="menu{{$first['id']}}-{{$second['id']}}" type="checkbox" name="permissions[]" value="{{$second['id']}}" title="{{$second['display_name']}}" lay-skin="primary" {{$second['own']??''}}></div>
                                    @if(isset($second['_child']))
                                        <div class="cate-third">
                                            @foreach($second['_child'] as $thild)
                                                <input type="checkbox" id="menu{{$first['id']}}-{{$second['id']}}-{{$thild['id']}}" name="permissions[]" value="{{$thild['id']}}" title="{{$thild['display_name']}}" lay-skin="primary" {{$thild['own']??''}}>
                                            @endforeach
                                        </div>
                                    @endif
                                </dd>
                            @endforeach
                        @endif
                    </dl>
                @empty
                    <div style="text-align: center;padding:20px 0;">
                        无数据
                    </div>
                @endforelse
                <div class="layui-form-item">
                    <button type="submit" class="layui-btn" lay-submit="" >确 认</button>
                    <a href="{{route('admin.user')}}"  class="layui-btn" >返 回</a>
                </div>

            </form>
        </div>
    </div>
@endsection

@section('script')
    <script type="text/javascript">
        layui.use(['form'],function () {
            var form = layui.form;
            form.on('checkbox', function (data) {
                var check = data.elem.checked;//是否选中
                var checkId = data.elem.id;//当前操作的选项框
                if (check) {
                    //选中
                    var ids = checkId.split("-");
                    if (ids.length == 3) {
                        //第三极菜单
                        //第三极菜单选中,则他的上级选中
                        $("#" + (ids[0] + '-' + ids[1])).prop("checked", true);
                        $("#" + (ids[0])).prop("checked", true);
                    } else if (ids.length == 2) {
                        //第二季菜单
                        $("#" + (ids[0])).prop("checked", true);
                        $("input[id*=" + ids[0] + '-' + ids[1] + "]").each(function (i, ele) {
                            $(ele).prop("checked", true);
                        });
                    } else {
                        //第一季菜单不需要做处理
                        $("input[id*=" + ids[0] + "-]").each(function (i, ele) {
                            $(ele).prop("checked", true);
                        });
                    }
                } else {
                    //取消选中
                    var ids = checkId.split("-");
                    if (ids.length == 2) {
                        //第二极菜单
                        $("input[id*=" + ids[0] + '-' + ids[1] + "]").each(function (i, ele) {
                            $(ele).prop("checked", false);
                        });
                    } else if (ids.length == 1) {
                        $("input[id*=" + ids[0] + "-]").each(function (i, ele) {
                            $(ele).prop("checked", false);
                        });
                    }
                }
                form.render();
            });
        })
    </script>
@endsection


以上则可以给用户分配角色和权限了

64.给各个功能，添加对应的权限
/routes/web.php 修改如下

// 系统管理
Route::group(['prefix' => 'admin','middleware' => ['auth','permission:system.manage']],function() {
    // 系统用户列表
	//
	//
	
});

65.添加中间件
/app/Http/Kernel.php
    protected $routeMiddleware = [
		// ....
        'role' => \Spatie\Permission\Middlewares\RoleMiddleware::class,
        'permission' => \Spatie\Permission\Middlewares\PermissionMiddleware::class,
        'role_or_permission' => \Spatie\Permission\Middlewares\RoleOrPermissionMiddleware::class,
    ];
	
此时可以设置用户角色，权限，功能了

66.设计左侧栏目，以便用权限控制显示与操作
修改/app/Providers/AppServiceProvider.php
如下
class AppServiceProvider extends ServiceProvider
{
	// 

    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        //
        view()->composer(['admin.layout'], \App\Http\ViewComposers\SiderbarComposer::class);
    }
}

67.建立上面的共享视图
/app/Http/ViewComposers/SiderbarComposer.php
<?php

namespace  App\Http\ViewComposers;

use Illuminate\Support\Facades\DB;
use Illuminate\View\View;

class SiderbarComposer {
    public function compose(View $view) {
        // 返回的导航数组
        $sidebar = [];
        $topMenus = DB::table('permissions')->where(['parent_id'=>0])->select()->get()->toArray();
        if($topMenus) {
            $top_ids = [];
            foreach ($topMenus as $row) {
                array_push($top_ids,$row->id);
                $sidebar[$row->id] = $row;
            }
            $secMenus = DB::table('permissions')
                ->whereIn('parent_id', $top_ids)
                ->get();

            if($secMenus){
                foreach ($secMenus as $sec_row) {
                    $sidebar[$sec_row->parent_id]->children[] = $sec_row;
                }
            }
        }
        $view->with('sidebar',$sidebar);
    }
}

68.在模板中添加权限和显示
/resources/views/admin/layout.blade.php

                    @foreach($sidebar as $menu)
                    @can($menu->name)
                    <li data-name="user" class="layui-nav-item">
                        <a href="javascript:;" lay-tips="{{$menu->display_name}}" lay-direction="2">
                            <i class="layui-icon layui-icon-user"></i>
                            <cite>{{$menu->display_name}}</cite>
                        </a>
                        <dl class="layui-nav-child">
                            @isset($menu->children)
                            @if($menu->children)
                            @foreach($menu->children as $subMenu)
                            @can($subMenu->name)
                            <dd data-name="{{$subMenu->name}}">
                                <a lay-href="{{route($subMenu->name)}}">{{$subMenu->display_name}}</a>
                            </dd>
                            @endcan
                            @endforeach
                            @endif
                            @endisset
                        </dl>
                    </li>
                    @endcan
                    @endforeach
	
69.为了方便测试权限，先在路由中添加一些模板	
/routes/web.php

// 产品管理
Route::group(['prefix' => 'admin','middleware'=>'auth'],function() {
    // 产品列表管理
    Route::get('products/index',[App\Http\Controllers\Admin\ProductsController::class,'index'])
        ->name('admin.products');

});


// 仓库管理
Route::group(['prefix' => 'admin','middleware'=>'auth'],function() {
    // 仓库列表管理
    Route::get('warehouse/index',[App\Http\Controllers\Admin\WarehouseController::class,'index'])
        ->name('admin.warehouse');
    // 仓库库存管理
    Route::get('warehouse/stock',[App\Http\Controllers\Admin\warehouseController::class,'stock'])
        ->name('admin.warehouse.stock');
});

// 订单管理
Route::group(['prefix' => 'admin','middleware'=>'auth'],function() {
    // 订单列表管理
    Route::get('orders/index',[App\Http\Controllers\Admin\OrdersController::class,'index'])
        ->name('admin.orders');
    // 订单物流管理
    Route::get('logistic/index',[App\Http\Controllers\Admin\LogisticController::class,'index'])
        ->name('admin.logistic');
});

// 采购管理
Route::group(['prefix' => 'admin','middleware'=>'auth'],function() {
    // 采购列表管理
    Route::get('purchase/index',[App\Http\Controllers\Admin\PurchaseController::class,'index'])
        ->name('admin.purchase');
    // 供应商管理
    Route::get('purchase/suppliers',[App\Http\Controllers\Admin\PurchaseController::class,'suppliers'])
        ->name('admin.purchase.suppliers');
});

70.根据上面的路由，分别建立对应的控器和模板即可

71.方便模板显示登陆用户名,修改
/app/Http/Controllers/Admin/IndexController.php
//
    public function layout() {
        $userInfo = Auth::user();
        $user['id'] = $userInfo->id;
        $user['name'] = $userInfo->name;
         return view('admin.layout',compact('user'));
    }
72.修改显示名称
/resources/views/admin/layout.blade.php
// 
<cite>贤心-{{$user['name']?? ''}}</cite>

73.分别添加路由对应的权限

74.再在相关路由加上权限即可
/routes/web.php
修改如下

// 系统管理
Route::group(['prefix' => 'admin','middleware' => ['auth','permission:system.manage']],function() {

    Route::group(['middleware' => ['permission:admin.user']], function() {
        // 系统用户列表
        Route::get('/user',[App\Http\Controllers\Admin\UserController::class, 'index'])
            ->name('admin.user');
        //添加系统用户
        Route::get('/create',[App\Http\Controllers\Admin\UserController::class, 'create'])
            ->name('admin.user.create')->middleware('permission:admin.user.create');
        // 获取系统用户列表
        Route::get('/data',[App\Http\Controllers\Admin\UserController::class, 'data'])
            ->name('admin.data');
        //删除系统用户
        Route::delete('user/destroy',[App\Http\Controllers\Admin\UserController::class, 'destroy'])
            ->name('admin.user.destroy')->middleware('permission:admin.user.destroy');
        //保存用户
        Route::post('/store',[App\Http\Controllers\Admin\UserController::class, 'store'])
            ->name('admin.user.store')->middleware('permission:admin.user.create');
        //编辑用户
        Route::get('user/{id}/edit',[App\Http\Controllers\Admin\UserController::class, 'edit'])
            ->name('admin.user.edit')->middleware('permission:admin.user.edit');
        // 保存编辑用户
        Route::put('user/{id}/update',[App\Http\Controllers\Admin\UserController::class, 'update'])
            ->name('admin.user.update')->middleware('permission:admin.user.edit');
        // 给人员分配角色
        Route::get('user/{id}/role',[App\Http\Controllers\Admin\UserController::class, 'role'])
            ->name('admin.user.role')->middleware('permission:admin.user.assignRole');
        Route::put('user/{id}/assignRole',[App\Http\Controllers\Admin\UserController::class, 'assignRole'])
            ->name('admin.user.assignRole')->middleware('permission:admin.user.assignRole');
        // 给人员分配权限
        Route::get('user/{id}/permission',[App\Http\Controllers\Admin\UserController::class, 'permission'])
            ->name('admin.user.permission')->middleware('permission:admin.user.assignPermission');
        Route::put('user/{id}/assignPermission',[App\Http\Controllers\Admin\UserController::class, 'assignPermission'])
            ->name('admin.user.assignPermission')->middleware('permission:admin.user.assignPermission');
    });


});

// 角色管理
Route::group(['prefix' => 'admin','middleware'=>['auth','permission:system.manage']],function() {

    Route::group(['middleware' => ['permission:admin.role']],function() {
        // 展示角色列表
        Route::get('role',[App\Http\Controllers\Admin\RoleController::class,'index'])
            ->name('admin.role');
        // 获取角色数据
        Route::get('role/data',[App\Http\Controllers\Admin\RoleController::class,'data'])
            ->name('admin.role.data');
        // 添加角色
        Route::get('role/create',[App\Http\Controllers\Admin\RoleController::class,'create'])
            ->name('admin.role.create')->middleware('permission:admin.role.create');
        // 保存添加的角色
        Route::post('role/store',[App\Http\Controllers\Admin\RoleController::class,'store'])
            ->name('admin.role.store')->middleware('permission:admin.role.create');
        //编辑角色
        Route::get('role/{id}/edit',[App\Http\Controllers\Admin\RoleController::class,'edit'])
            ->name('admin.role.edit')->middleware('permission:admin.role.edit');
        // 保存编辑
        Route::put('role/{id}/update',[App\Http\Controllers\Admin\RoleController::class,'update'])
            ->name('admin.role.update')->middleware('permission:admin.role.edit');
        //删除角色
        Route::delete('role/destroy',[App\Http\Controllers\Admin\RoleController::class, 'destroy'])
            ->name('admin.role.destroy')->middleware('permission:admin.role.destroy');

        //修改角色的拥有的权限
        Route::get('role/{id}/permission',[App\Http\Controllers\Admin\RoleController::class,'permission'])
            ->name('admin.role.permission')->middleware('permission:admin.role.assignPermission');
        // 保存角色修改的权限
        Route::put('role/{id}/assignPermission',[App\Http\Controllers\Admin\RoleController::class,'assignPermission'])
            ->name('admin.role.assignPermission')->middleware('permission:admin.role.assignPermission');
    });

});

// 权限管理
Route::group(['prefix' => 'admin','middleware'=>['auth','permission:system.manage']],function() {
    Route::group(['middleware' => ['permission:admin.permission']],function() {
        // 权限展示
        Route::get('permission', [App\Http\Controllers\Admin\PermissionController::class, 'index'])
            ->name('admin.permission');
        // 获取权限数据
        Route::get('permission/data', [App\Http\Controllers\Admin\PermissionController::class, 'data'])
            ->name('admin.permission.data');
        //创建权限
        Route::get('permission/create', [App\Http\Controllers\Admin\PermissionController::class, 'create'])
            ->name('admin.permission.create')->middleware('permission:admin.permission.create');
        // 保存新创建的权限
        Route::post('permission/store', [App\Http\Controllers\Admin\PermissionController::class, 'store'])
            ->name('admin.permission.store')->middleware('permission:admin.permission.create');
        //编辑权限
        Route::get('permission/{id}/edit', [App\Http\Controllers\Admin\PermissionController::class, 'edit'])
            ->name('admin.permission.edit')->middleware('permission:admin.permission.edit');
        // 保存编辑的权限
        Route::put('permission/{id}/update', [App\Http\Controllers\Admin\PermissionController::class, 'update'])
            ->name('admin.permission.update')->middleware('permission:admin.permission.edit');
        // 删除权限
        Route::delete('permission/destroy', [App\Http\Controllers\Admin\PermissionController::class, 'destroy'])
            ->name('admin.permission.destroy')->middleware('permission:admin.permission.destroy');
    });
});


到目前为止，系统管理的功能基本使用，为了隐藏一些没有权限的操作展示，
分别对 blade模板文件加上权限判断
比如系统用户模板
/resources/views/admin/user/index.blade.php
分别在增加，删除，修改处加上判断
	@can('admin.user.destroy')
	<button class="layui-btn layui-btn-sm layui-btn-danger" id="listDelete">删 除</button>
	@endcan
	@can('admin.user.create')
	<a class="layui-btn layui-btn-sm" href="{{ route('admin.user.create') }}">添 加</a>
	@endcan

至此已经完成
以下添加一些功能测试
添加路由
/routes/web.php
// 
// 产品管理
Route::group(['prefix' => 'admin','middleware'=>['auth','permission:products.manage']],function() {
    // 产品列表管理
    Route::get('products/index',[App\Http\Controllers\Admin\ProductsController::class,'index'])
        ->name('admin.products')->middleware('permission:admin.products');
    // 获取产品列表数据
    Route::get('products/data', [App\Http\Controllers\Admin\ProductsController::class, 'data'])
        ->name('admin.products.data')->middleware('permission:admin.products');
    // 产品新增
    Route::get('products/create',[App\Http\Controllers\Admin\ProductsController::class,'create'])
        ->name('admin.products.create')->middleware('permission:admin.products.create');

    // 新增保存
    Route::post('products/store',[App\Http\Controllers\Admin\ProductsController::class,'store'])
        ->name('admin.products.store')->middleware('permission:admin.products.create');
    // 产品编辑
    Route::get('products/{id}/edit',[App\Http\Controllers\Admin\ProductsController::class,'edit'])
        ->name('admin.products.edit')->middleware('permission:admin.products.edit');
    // 产品编辑保存
    Route::put('products/{id}/update',[App\Http\Controllers\Admin\ProductsController::class,'update'])
        ->name('admin.products.update')->middleware('permission:admin.products.edit');
    // 产品删除
    Route::delete('products/destroy',[App\Http\Controllers\Admin\ProductsController::class,'destroy'])
        ->name('admin.products.destroy')->middleware('permission:admin.products.destroy');
    // 编辑产品状态
    Route::put('products/changeStatus',[App\Http\Controllers\Admin\ProductsController::class,'changeStatus'])
        ->name('admin.products.changeStatus')->middleware('permission:admin.products.edit');

    // 分类管理
    // 分类列表
    Route::get('category/index',[App\Http\Controllers\Admin\CategoryController::class,'index'])
        ->name('admin.category')->middleware('permission:admin.category');

    // 获取分类数据
    Route::get('category/data', [App\Http\Controllers\Admin\CategoryController::class, 'data'])
        ->name('admin.category.data')->middleware('permission:admin.category');
    // 分类新增
    Route::get('category/create',[App\Http\Controllers\Admin\CategoryController::class,'create'])
        ->name('admin.category.create')->middleware('permission:admin.category.create');
    // 新增分类保存
    Route::post('category/store',[App\Http\Controllers\Admin\CategoryController::class,'store'])
        ->name('admin.category.store')->middleware('permission:admin.category.create');
    // 分类编辑
    Route::get('category/{id}/edit',[App\Http\Controllers\Admin\CategoryController::class,'edit'])
        ->name('admin.category.edit')->middleware('permission:admin.category.edit');
    // 分类编辑保存
    Route::put('category/{id}/update',[App\Http\Controllers\Admin\CategoryController::class,'update'])
        ->name('admin.category.update')->middleware('permission:admin.category.edit');
    // 分类删除
    Route::delete('category/destroy',[App\Http\Controllers\Admin\CategoryController::class,'destroy'])
        ->name('admin.category.destroy')->middleware('permission:admin.category.destroy');
});


// 仓库管理
Route::group(['prefix' => 'admin','middleware'=>['auth','permission:warehouse.manage']],function() {
    // 仓库列表管理
    Route::get('warehouse/index',[App\Http\Controllers\Admin\WarehouseController::class,'index'])
        ->name('admin.warehouse')->middleware('permission:admin.warehouse');
    // 仓库库存管理
    Route::get('warehouse/stock',[App\Http\Controllers\Admin\warehouseController::class,'stock'])
        ->name('admin.warehouse.stock')->middleware('permission:admin.warehouse.stock');
});

// 订单管理
Route::group(['prefix' => 'admin','middleware'=>['auth','permission:orders.manage']],function() {
    // 订单列表管理
    Route::get('orders/index',[App\Http\Controllers\Admin\OrdersController::class,'index'])
        ->name('admin.orders')->middleware('permission:admin.orders');
    // 订单物流管理
    Route::get('logistic/index',[App\Http\Controllers\Admin\LogisticController::class,'index'])
        ->name('admin.logistic')->middleware('permission:admin.logistic');
});

// 采购管理
Route::group(['prefix' => 'admin','middleware'=>['auth','permission:purchase.manage']],function() {
    // 采购列表管理
    Route::get('purchase/index',[App\Http\Controllers\Admin\PurchaseController::class,'index'])
        ->name('admin.purchase')->middleware('permission:admin.purchase');
    // 供应商管理
    Route::get('purchase/suppliers',[App\Http\Controllers\Admin\PurchaseController::class,'suppliers'])
        ->name('admin.purchase.suppliers')->middleware('permission:admin.purchase.suppliers');
});
//文件上传接口
Route::post('uploadImg', [App\Http\Controllers\PublicController::class,'uploadImg'])->name('uploadImg');

同于上传到 storage/app/public 目录的文件可以被外部访问，还要执行以下命令

php artisan storage:link

该命令会在项目根目录下的 public 中创建一个软链 storage 
指向 storage/app/public，这样，后者下面的文件才可以真正通过 Web 路径访问。

76.分别添加产品表products和产品分类表category
CREATE TABLE `products` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `keywords` varchar(255) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL COMMENT '分类ID',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci,
  `flag` tinyint(1) DEFAULT '1' COMMENT '1-启用，0-关闭',
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `author` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `title` (`title`),
  KEY `category_id` (`category_id`),
  KEY `flag` (`flag`),
  KEY `author` (`author`),
  KEY `created_at` (`created_at`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='产品表';

CREATE TABLE `category` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `name_cn` varchar(255) DEFAULT NULL COMMENT '英文名称',
  `parent_id` int(11) DEFAULT '0' COMMENT '父类ID',
  `author` varchar(50) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `parent_id` (`parent_id`),
  KEY `created_at` (`created_at`),
  KEY `author` (`author`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='产品分类';
根据对应的layuiadmin修改对应的模板即可
最后，依次加上对应的权限
至次，整合完成

安装 ueditor
https://github.com/overtrue/laravel-ueditor

以下说明route/api.php

77. 在route/api.php 添加
// 测试API功能
Route::group(['prefix' => 'test'], function() {
    Route::get('index',[App\Http\Controllers\Api\TestController::class,'index']);
});

78.新增 /app/Http/Controllers/Api/TestController.php
<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;

class TestController extends Controller {
    public function index() {
        echo __CLASS__ . '  -> ' .  __METHOD__;
    }
}

直接访问

域名/api/test/index

即可


79.命令行执行laravel程序
比如获取最新10个产品
执行以下命令
php artisan make:command products/getProductsList

此时会生成文件 /app/Console/Commands/products/getProductsList.php

80.在文件中
/app/Console/Kernel.php
添加如下
    protected function schedule(Schedule $schedule)
    {
        // $schedule->command('inspire')->hourly();
		// 
        $schedule->command('command:getProductsList')->hourly();

    }
	
81.打开文件
/app/Console/Commands/products/getProductsList.php
修改如下方法

// 
class getProductsList extends Command
{
	protected $signature = 'command:products_getProductsList';

	protected $description = '获取最新10个产品';

		/**
		 * Execute the console command.
		 *
		 * @return int
		 */
		public function handle()
		{
			$products = DB::table('products')->take(10)->get();
				foreach ($products as $product) {
				echo $product->id . ':' . $product->title . "\n";
			}
		}
		// 	
}

执行以下脚本即可
php ./artisan command:products_getProductsList

82.生在迁移数据表文件
参考如下
https://github.com/oscarafdev/migrations-generator

php artisan migrations:generate
或
php artisan migrate:generate table1,table2,table3,table4,table5

测试SQL文件  laravel8.sql









	



